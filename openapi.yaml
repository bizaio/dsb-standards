info:
  contact:
    email: hello@biza.io
    name: Biza.io
    url: 'https://biza.io/'
  description: >
    This specification mirrors the definitions of the Australian Consumer Data
    Standards and is intended to deliver the Standards in OpenAPI 3 format with
    additional data specifications.

    The source for this Redocs is available at
    [https://github.com/bizaio/dsb-standards](https://github.com/bizaio/dsb-standards).

    A downgraded Swagger 2 version of this document can be [downloaded
    here](http://bizaio.github.io/dsb-standards/swagger2.json).
  license:
    name: GPL 3.0
    url: 'https://opensource.org/licenses/GPL-3.0'
  title: Consumer Data Standards (Biza.io Edition)
  version: 1.5.0
openapi: 3.0.0
paths:
  /banking/accounts:
    get:
      description: Obtain a list of accounts
      operationId: listAccounts
      parameters:
        - $ref: '#/components/parameters/QueryProductCategory'
        - $ref: '#/components/parameters/QueryAccountOpenStatus'
        - $ref: '#/components/parameters/QueryAccountIsOwned'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListAccounts'
      summary: Get Accounts
      tags:
        - Accounts
        - Banking
      security:
        - CDRAuth:
            - 'bank:accounts.basic:read'
      x-version: '1'
  /banking/accounts/balances:
    get:
      description: 'Obtain balances for multiple, filtered accounts'
      operationId: listBalancesBulk
      parameters:
        - $ref: '#/components/parameters/QueryProductCategory'
        - $ref: '#/components/parameters/QueryAccountOpenStatus'
        - $ref: '#/components/parameters/QueryAccountIsOwned'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListBalancesBulk'
      summary: Get Bulk Balances
      tags:
        - Balances
        - Banking
      security:
        - CDRAuth:
            - 'bank:accounts.basic:read'
      x-version: '1'
    post:
      description: Obtain balances for a specified list of accounts
      operationId: listBalancesSpecificAccounts
      parameters:
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
      requestBody:
        $ref: '#/components/requestBodies/RequestAccountIds'
      responses:
        '200':
          $ref: '#/components/responses/ListBalancesSpecificAccounts'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      summary: Get Balances For Specific Accounts
      tags:
        - Balances
        - Banking
      security:
        - CDRAuth:
            - 'bank:accounts.basic:read'
      x-version: '1'
  /banking/accounts/direct-debits:
    get:
      description: 'Obtain direct debit authorisations for multiple, filtered accounts'
      operationId: listDirectDebitsBulk
      parameters:
        - $ref: '#/components/parameters/QueryProductCategory'
        - $ref: '#/components/parameters/QueryAccountOpenStatus'
        - $ref: '#/components/parameters/QueryAccountIsOwned'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListDirectDebitsBulk'
      summary: Get Bulk Direct Debits
      tags:
        - Banking
        - Direct Debits
      security:
        - CDRAuth:
            - 'bank:regular_payments:read'
      x-version: '1'
    post:
      description: Obtain direct debit authorisations for a specified list of accounts
      operationId: listDirectDebitsSpecificAccounts
      parameters:
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      requestBody:
        $ref: '#/components/requestBodies/RequestAccountIds'
      responses:
        '200':
          $ref: '#/components/responses/ListDirectDebitsSpecificAccounts'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      summary: Get Direct Debits For Specific Accounts
      tags:
        - Banking
        - Direct Debits
      security:
        - CDRAuth:
            - 'bank:regular_payments:read'
      x-version: '1'
  '/banking/accounts/{accountId}':
    get:
      description: Obtain detailed information on a single account
      operationId: getAccountDetail
      parameters:
        - $ref: '#/components/parameters/PathAccountId'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountDetail'
      summary: Get Account Detail
      tags:
        - Accounts
        - Banking
      security:
        - CDRAuth:
            - 'bank:accounts.detail:read'
      x-version: '1'
  '/banking/accounts/{accountId}/balance':
    get:
      description: Obtain the balance for a single specified account
      operationId: getBalance
      parameters:
        - $ref: '#/components/parameters/PathAccountId'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetBalance'
      summary: Get Account Balance
      tags:
        - Balances
        - Banking
      security:
        - CDRAuth:
            - 'bank:accounts.basic:read'
      x-version: '1'
  '/banking/accounts/{accountId}/direct-debits':
    get:
      description: Obtain direct debit authorisations for a specific account
      operationId: listDirectDebits
      parameters:
        - $ref: '#/components/parameters/PathAccountId'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListDirectDebits'
      summary: Get Direct Debits For Account
      tags:
        - Banking
        - Direct Debits
      security:
        - CDRAuth:
            - 'bank:regular_payments:read'
      x-version: '1'
  '/banking/accounts/{accountId}/payments/scheduled':
    get:
      description: 'Obtain scheduled, outgoing payments for a specific account'
      operationId: listScheduledPayments
      parameters:
        - $ref: '#/components/parameters/PathAccountId'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListScheduledPayments'
      summary: Get Scheduled Payments for Account
      tags:
        - Banking
        - Scheduled Payments
      security:
        - CDRAuth:
            - 'bank:regular_payments:read'
      x-version: '1'
  '/banking/accounts/{accountId}/transactions':
    get:
      description: "Obtain transactions for a specific account.\n\nSome general notes that apply to all end points that retrieve transactions:\n\n- Where multiple transactions are returned, transactions should be ordered according to effective date in descending order\n- As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the “effective” date/time which will be defined as:\n\t\t- Posted date/time if available, then\n\t\t- Execution date/time if available, then\n\t\t- A reasonable date/time nominated by the data holder using internal data structures\n- For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account\n- For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information accross the subsidiary transactions as possible, is required to be shared"
      operationId: getTransactions
      parameters:
        - $ref: '#/components/parameters/PathAccountId'
        - $ref: '#/components/parameters/QueryTransactionOldestTime'
        - $ref: '#/components/parameters/QueryTransactionNewestTime'
        - $ref: '#/components/parameters/QueryTransactionMinAmount'
        - $ref: '#/components/parameters/QueryTransactionMaxAmount'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetTransactions'
      summary: Get Transactions For Account
      tags:
        - Banking
        - Transactions
      security:
        - CDRAuth:
            - 'bank:transactions:read'
      x-version: '1'
  '/banking/accounts/{accountId}/transactions/{transactionId}':
    get:
      description: Obtain detailed information on a transaction for a specific account
      operationId: getTransactionDetail
      parameters:
        - $ref: '#/components/parameters/PathAccountId'
        - $ref: '#/components/parameters/PathTransactionId'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionDetail'
      summary: Get Transaction Detail
      tags:
        - Banking
        - Transactions
      security:
        - CDRAuth:
            - 'bank:transactions:read'
      x-version: '1'
  /banking/payees:
    get:
      description: Obtain a list of pre-registered payees
      operationId: listPayees
      parameters:
        - $ref: '#/components/parameters/QueryPayeeType'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListPayees'
      summary: Get Payees
      tags:
        - Banking
        - Payees
      security:
        - CDRAuth:
            - 'bank:payees:read'
      x-version: '1'
  '/banking/payees/{payeeId}':
    get:
      description: >-
        Obtain detailed information on a single payee. Note that the payee
        sub-structure should be selected to represent the payment destination
        only rather than any known characteristics of the payment recipient
      operationId: getPayeeDetail
      parameters:
        - $ref: '#/components/parameters/PathPayeeId'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetPayeeDetail'
      summary: Get Payee Detail
      tags:
        - Banking
        - Payees
      security:
        - CDRAuth:
            - 'bank:payees:read'
      x-version: '1'
  /banking/payments/scheduled:
    get:
      description: >-
        Obtain scheduled payments for multiple, filtered accounts that are the
        source of funds for the payments
      operationId: listScheduledPaymentsBulk
      parameters:
        - $ref: '#/components/parameters/QueryProductCategory'
        - $ref: '#/components/parameters/QueryAccountOpenStatus'
        - $ref: '#/components/parameters/QueryAccountIsOwned'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/ListAccounts'
      summary: Get Scheduled Payments Bulk
      tags:
        - Banking
        - Scheduled Payments
      security:
        - CDRAuth:
            - 'bank:regular_payments:read'
      x-version: '1'
    post:
      description: Obtain scheduled payments for a specified list of accounts
      operationId: listScheduledPaymentsSpecificAccounts
      parameters:
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      requestBody:
        $ref: '#/components/requestBodies/RequestAccountIds'
      responses:
        '200':
          $ref: '#/components/responses/ListBalancesSpecificAccounts'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      summary: Get Scheduled Payments For Specific Accounts
      tags:
        - Banking
        - Scheduled Payments
      security:
        - CDRAuth:
            - 'bank:regular_payments:read'
      x-version: '1'
  /banking/products:
    get:
      description: >-
        Obtain a list of products that are currently openly offered to the
        market


        Note that the results returned by this end point are expected to be
        ordered in descending order according to `lastUpdated`


        ### Conventions

        In the product reference payloads there are a number of recurring
        conventions that are explained here, in one place.


        #### Arrays Of Features


        In the product detail payload there are a number of arrays articulating
        generic features, constraints, prices, etc. The intent of these arrays
        is as follows:


        - Each element in an array has the same structure so that clients can
        reliably interpret the payloads

        - Each element as a type element that is an enumeration of the specific
        aspect of a product being described, such as types of fees.

        - Each element has a field name
        [additionalValue](#productfeaturetypedoc).  This is a generic field with
        contents that will vary based on the type of object being described. The
        contents of this field for the ADDITIONAL_CARDS feature is the number of
        cards allowed while the contents of this field for the MAX_LIMIT
        constraint would be the maximum credit limit allowed for the product.

        - An element in these arrays of the same type may appear more than once.
        For instance, a product may offer two separate loyalty programs that the
        customer can select from. A fixed term mortgage may have different rates
        for different term lengths.

        - An element in these arrays may contain an additionalInfo and
        additionalInfoUri field. The additionalInfo field is used to provide
        displayable text clarifying the purpose of the element in some way when
        the product is presented to a customer. The additionalInfoUri provides a
        link to externally hosted information specifically relevant to that
        feature of the product.

        - Depending on the type of data being represented there may be
        additional specific fields.


        #### URIs To More Information


        As the complexities and nuances of a financial product can not easily be
        fully expressed in a data structure without a high degree of complexity
        it is necessary to provide additional reference information that a
        potential customer can access so that they are fully informed of the
        features and implications of the product. The payloads for product
        reference therefore contain numerous fields that are provided to allow
        the product holder to describe the product more fully using a web page
        hosted on their online channels.


        These URIs do not need to all link to different pages. If desired, they
        can all link to a single hosted page and use difference HTML anchors to
        focus on a specific topic such as eligibility or fees.


        #### Linkage To Accounts

        From the moment that a customer applies for a product and an account is
        created the account and the product that spawned it will diverge.  Rates
        and features of the product may change and a discount may be negotiated
        for the account.


        For this reason, while productCategory is a common field between
        accounts and products, there is no specific ID that can be used to link
        an account to a product within the regime.


        Similarly, many of the fields and objects in the product payload will
        appear in the account detail payload but the structures and semantics
        are not identical as one refers to a product that can potentially be
        originated and one refers to an account that actual has been
        instantiated and created along with the associated decisions inherent in
        that process.


        #### Dates

        It is expected that data consumers needing this data will call
        relatively frequently to ensure the data they have is representative of
        the current offering from a bank.  To minimise the volume and frequency
        of these calls the ability to set a lastUpdated field with the date and
        time of the last update to this product is included.  A call for a list
        of products can then be filtered to only return products that have been
        updated since the last time that data was obtained using the
        updated-since query parameter.


        In addition, the concept of effective date and time has also been
        included.  This allows for a product to be marked for obsolescence, or
        introduction, from a certain time without the need for an update to show
        that a product has been changed.  The inclusion of these dates also
        removes the need to represent deleted products in the payload.  Products
        that are no long offered can be marked not effective for a few weeks
        before they are then removed from the product set as an option entirely.


        NOTE: This version must be implemented by **February 2021**
      operationId: listProducts
      parameters:
        - $ref: '#/components/parameters/QueryProductEffective'
        - $ref: '#/components/parameters/QueryUpdatedSince'
        - $ref: '#/components/parameters/QueryProductBrand'
        - $ref: '#/components/parameters/QueryProductCategory'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
      responses:
        '200':
          $ref: '#/components/responses/ListProducts'
      summary: Get Products
      security: []
      tags:
        - Banking
        - Products
      x-version: '3'
  '/banking/products/{productId}':
    get:
      description: >-
        Obtain detailed information on a single product offered openly to the
        market.

        NOTE: This version must be implemented by **February 2021**
      operationId: getProductDetail
      parameters:
        - $ref: '#/components/parameters/PathProductId'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
      responses:
        '200':
          $ref: '#/components/responses/GetProductDetail'
      summary: Get Product Detail
      security: []
      tags:
        - Banking
        - Products
      x-version: '3'
  /common/customer:
    get:
      description: >-
        Obtain basic information on the customer that has authorised the current
        session
      operationId: getCustomer
      parameters:
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomer'
      summary: Get Customer
      tags:
        - Common
        - Customer
      security:
        - CDRAuth:
            - 'common:customer.basic:read'
      x-version: '1'
  /common/customer/detail:
    get:
      description: >-
        Obtain detailed information on the authorised customer within the
        current session.
      operationId: getCustomerDetail
      parameters:
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
        - $ref: '#/components/parameters/HeaderXFapiInteractionId'
        - $ref: '#/components/parameters/HeaderXFAPIAuthDate'
        - $ref: '#/components/parameters/HeaderXFAPICustomerIPAddress'
        - $ref: '#/components/parameters/HeaderXCDSClientHeaders'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerDetail'
      summary: Get Customer Detail
      tags:
        - Common
        - Customer
      security:
        - CDRAuth:
            - 'common:customer.detail:read'
      x-version: '1'
  /discovery/outages:
    get:
      description: Obtain a list of scheduled outages for the implementation
      operationId: getOutages
      parameters:
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
      responses:
        '200':
          $ref: '#/components/responses/GetOutages'
      summary: Get Outages
      security: []
      tags:
        - Common
        - Discovery
      x-version: '1'
  /discovery/status:
    get:
      description: Obtain a health check status for the implementation
      operationId: getStatus
      parameters:
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
      responses:
        '200':
          $ref: '#/components/responses/GetStatus'
      summary: Get Status
      security: []
      tags:
        - Common
        - Discovery
      x-version: '1'
  /admin/metrics:
    get:
      description: >-
        This end point allows the ACCC to obtain operational statistics from the
        Data Holder on the operation of their CDR compliant implementation. The
        statistics obtainable from this end point are determined by the
        non-functional requirements for the CDR regime.
      operationId: getMetrics
      parameters:
        - $ref: '#/components/parameters/QueryPeriod'
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
      responses:
        '200':
          $ref: '#/components/responses/GetMetrics'
      summary: Get Metrics
      tags:
        - Admin
        - Metrics
      x-version: '1'
      security:
        - RegisterAuth: []
  /admin/register/metadata:
    post:
      description: >-
        Indicate that a critical update to the metadata for Accredited Data
        Recipients has been made and should be obtained
      operationId: metadataUpdate
      parameters:
        - $ref: '#/components/parameters/HeaderXV'
        - $ref: '#/components/parameters/HeaderXMinV'
      requestBody:
        $ref: '#/components/requestBodies/RequestMetaDataUpdate'
      responses:
        '200':
          $ref: '#/components/responses/MetadataUpdate'
      summary: Metadata Update
      tags:
        - Admin
        - Register
      x-version: '1'
      security:
        - RegisterAuth: []
tags:
  - name: Admin
    description: Admin APIs
  - name: Accounts
    description: Accounts Related APIs
  - name: Balances
    description: Account Balance Related APIs
  - name: Banking
    description: Banking APIs
  - name: Common
    description: Common APIs
  - name: Customer
    description: Customer APIs
  - name: Discovery
    description: Discovery APIs
  - name: Direct Debits
    description: Direct Debits APIs
  - name: Metrics
    description: Metrics APIs
  - name: Payees
    description: Payee APIs
  - name: Products
    description: Products
  - name: Register
    description: Register APIs
  - name: Scheduled Payments
    description: Scheduled Payments APIs
  - name: Transactions
    description: Transactions APIs
  - name: Schemas
    description: >+
      # AdminAvailabilityMetrics


      ## AdminAvailabilityMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminAvailabilityMetricsV1" />




      # AdminAverageResponseMetrics


      ## AdminAverageResponseMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminAverageResponseMetricsV1" />




      # AdminErrorMetric


      ## AdminErrorMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminErrorMetricV1" />




      # AdminInvocationMetric


      ## AdminInvocationMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminInvocationMetricV1"
      />




      # AdminInvocationMetrics


      ## AdminInvocationMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminInvocationMetricsV1" />




      # AdminPeakTPSMetrics


      ## AdminPeakTPSMetricsV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminPeakTPSMetricsV1"
      />




      # AdminPerformanceMetrics


      ## AdminPerformanceMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminPerformanceMetricsV1" />




      # AdminRejectionMetric


      ## AdminRejectionMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminRejectionMetricV1"
      />




      # AdminRejectionMetrics


      ## AdminRejectionMetricsV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminRejectionMetricsV1"
      />


      ## AdminRejectionMetricsV2

      <SchemaDefinition schemaRef="#/components/schemas/AdminRejectionMetricsV2"
      />




      # AdminSessionCountMetrics


      ## AdminSessionCountMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminSessionCountMetricsV1" />




      # AdminTPSMetric


      ## AdminTPSMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminTPSMetricV1" />




      # AdminTierMetric


      ## AdminTierMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminTierMetricV1" />




      # BankingAccountDetail


      ## BankingAccountDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingAccountDetailV1"
      />




      # BankingAccount


      ## BankingAccountV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingAccountV1" />




      # BankingAuthorisedEntity


      ## BankingAuthorisedEntityV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingAuthorisedEntityV1" />




      # BankingBalancePurse


      ## BankingBalancePurseV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingBalancePurseV1"
      />




      # BankingBalance


      ## BankingBalanceV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingBalanceV1" />




      # BankingBillerPayee


      ## BankingBillerPayeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingBillerPayeeV1" />




      # BankingCreditCardAccount


      ## BankingCreditCardAccountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingCreditCardAccountV1" />




      # BankingDirectDebit


      ## BankingDirectDebitV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingDirectDebitV1" />




      # BankingDomesticPayeeAccount


      ## BankingDomesticPayeeAccountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingDomesticPayeeAccountV1" />




      # BankingDomesticPayeeCard


      ## BankingDomesticPayeeCardV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingDomesticPayeeCardV1" />




      # BankingDomesticPayeePayId


      ## BankingDomesticPayeePayIdV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingDomesticPayeePayIdV1" />




      # BankingDomesticPayee


      ## BankingDomesticPayeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingDomesticPayeeV1"
      />




      # BankingInternationalPayeeBankDetailsBankAddress


      ## BankingInternationalPayeeBankDetailsBankAddressV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeBankDetailsBankAddressV1"
      />




      # BankingInternationalPayeeBankDetails


      ## BankingInternationalPayeeBankDetailsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeBankDetailsV1" />




      # BankingInternationalPayeeBeneficiaryDetails


      ## BankingInternationalPayeeBeneficiaryDetailsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeBeneficiaryDetailsV1"
      />




      # BankingInternationalPayee


      ## BankingInternationalPayeeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeV1" />




      # BankingLoanAccount


      ## BankingLoanAccountV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingLoanAccountV1" />




      # BankingPayeeDetail


      ## BankingPayeeDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingPayeeDetailV1" />




      # BankingPayee


      ## BankingPayeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingPayeeV1" />




      # BankingProductAdditionalInformation


      ## BankingProductAdditionalInformationV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductAdditionalInformationV1" />




      # BankingProductBundle


      ## BankingProductBundleV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductBundleV1"
      />




      # BankingProductCardArt


      ## BankingProductCardArtV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductCardArtV1"
      />




      # BankingProductConstraint


      ## BankingProductConstraintV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductConstraintV1" />




      # BankingProductDepositRate


      ## BankingProductDepositRateV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDepositRateV1" />


      ## BankingProductDepositRateV2

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDepositRateV2" />




      # BankingProductDetail


      ## BankingProductDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductDetailV1"
      />


      ## BankingProductDetailV2

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductDetailV2"
      />


      ## BankingProductDetailV3

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductDetailV3"
      />




      # BankingProductDiscountEligibility


      ## BankingProductDiscountEligibilityV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDiscountEligibilityV1" />




      # BankingProductDiscount


      ## BankingProductDiscountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDiscountV1" />




      # BankingProductEligibility


      ## BankingProductEligibilityV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductEligibilityV1" />




      # BankingProductFeature


      ## BankingProductFeatureV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductFeatureV1"
      />




      # BankingProductFee


      ## BankingProductFeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductFeeV1" />


      ## BankingProductFeeV2

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductFeeV2" />




      # BankingProductLendingRate


      ## BankingProductLendingRateV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductLendingRateV1" />


      ## BankingProductLendingRateV2

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductLendingRateV2" />


      ## BankingProductLendingRateV3

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductLendingRateV3" />




      # BankingProductRateCondition


      ## BankingProductRateConditionV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateConditionV1" />




      # BankingProductRateSubTier


      ## BankingProductRateSubTierV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateSubTierV1" />




      # BankingProductRateTier


      ## BankingProductRateTierV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateTierV1" />


      ## BankingProductRateTierV2

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateTierV2" />


      ## BankingProductRateTierV3

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateTierV3" />




      # BankingProduct


      ## BankingProductV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductV1" />


      ## BankingProductV2

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductV2" />


      ## BankingProductV3

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductV3" />




      # BankingScheduledPaymentFrom


      ## BankingScheduledPaymentFromV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentFromV1" />




      # BankingScheduledPaymentInterval


      ## BankingScheduledPaymentIntervalV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentIntervalV1" />




      # BankingScheduledPaymentRecurrenceEventBased


      ## BankingScheduledPaymentRecurrenceEventBasedV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceEventBasedV1"
      />




      # BankingScheduledPaymentRecurrenceIntervalSchedule


      ## BankingScheduledPaymentRecurrenceIntervalScheduleV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceIntervalScheduleV1"
      />




      # BankingScheduledPaymentRecurrenceLastWeekday


      ## BankingScheduledPaymentRecurrenceLastWeekdayV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceLastWeekdayV1"
      />




      # BankingScheduledPaymentRecurrenceOnceOff


      ## BankingScheduledPaymentRecurrenceOnceOffV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceOnceOffV1"
      />




      # BankingScheduledPaymentRecurrence


      ## BankingScheduledPaymentRecurrenceV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceV1" />




      # BankingScheduledPaymentSet


      ## BankingScheduledPaymentSetV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentSetV1" />




      # BankingScheduledPaymentTo


      ## BankingScheduledPaymentToV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentToV1" />




      # BankingScheduledPayment


      ## BankingScheduledPaymentV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentV1" />




      # BankingTermDepositAccount


      ## BankingTermDepositAccountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTermDepositAccountV1" />




      # BankingTransactionDetailExtendedData


      ## BankingTransactionDetailExtendedDataV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTransactionDetailExtendedDataV1" />




      # BankingTransactionDetailExtendedDataX2P101Payload


      ## BankingTransactionDetailExtendedDataX2P101PayloadV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTransactionDetailExtendedDataX2P101PayloadV1"
      />




      # BankingTransactionDetail


      ## BankingTransactionDetailV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTransactionDetailV1" />




      # BankingTransaction


      ## BankingTransactionV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingTransactionV1" />




      # CommonEmailAddress


      ## CommonEmailAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonEmailAddressV1" />




      # CommonOrganisationDetail


      ## CommonOrganisationDetailV1

      <SchemaDefinition
      schemaRef="#/components/schemas/CommonOrganisationDetailV1" />




      # CommonOrganisation


      ## CommonOrganisationV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonOrganisationV1" />




      # CommonPAFAddress


      ## CommonPAFAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPAFAddressV1" />




      # CommonPersonDetail


      ## CommonPersonDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPersonDetailV1" />




      # CommonPerson


      ## CommonPersonV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPersonV1" />




      # CommonPhoneNumber


      ## CommonPhoneNumberV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPhoneNumberV1" />




      # CommonPhysicalAddress


      ## CommonPhysicalAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPhysicalAddressV1"
      />




      # CommonPhysicalAddressWithPurpose


      ## CommonPhysicalAddressWithPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/CommonPhysicalAddressWithPurposeV1" />




      # CommonSimpleAddress


      ## CommonSimpleAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonSimpleAddressV1"
      />




      # DiscoveryOutage


      ## DiscoveryOutageV1

      <SchemaDefinition schemaRef="#/components/schemas/DiscoveryOutageV1" />




      # Error


      ## ErrorV1

      <SchemaDefinition schemaRef="#/components/schemas/ErrorV1" />




      # LinksPaginated


      ## LinksPaginatedV1

      <SchemaDefinition schemaRef="#/components/schemas/LinksPaginatedV1" />




      # Links


      ## LinksV1

      <SchemaDefinition schemaRef="#/components/schemas/LinksV1" />




      # MetaPaginated


      ## MetaPaginatedV1

      <SchemaDefinition schemaRef="#/components/schemas/MetaPaginatedV1" />




      # Meta


      ## MetaV1

      <SchemaDefinition schemaRef="#/components/schemas/MetaV1" />



  - name: Enumerations
    description: >+
      # EnumBankingAccountOpenStatus


      ## EnumBankingAccountOpenStatusV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingAccountOpenStatusV1" />




      # EnumBankingBillerCRNType


      ## EnumBankingBillerCRNTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingBillerCRNTypeV1" />




      # EnumBankingDepositRateType


      ## EnumBankingDepositRateTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingDepositRateTypeV1" />




      # EnumBankingInterestPaymentDue


      ## EnumBankingInterestPaymentDueV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingInterestPaymentDueV1" />




      # EnumBankingLendingRateType


      ## EnumBankingLendingRateTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingLendingRateTypeV1" />




      # EnumBankingLoanPurpose


      ## EnumBankingLoanPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingLoanPurposeV1" />




      # EnumBankingMaturityInstructions


      ## EnumBankingMaturityInstructionsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingMaturityInstructionsV1" />




      # EnumBankingNonBusinessDayTreatment


      ## EnumBankingNonBusinessDayTreatmentV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingNonBusinessDayTreatmentV1" />




      # EnumBankingPayeeType


      ## EnumBankingPayeeTypeV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumBankingPayeeTypeV1"
      />




      # EnumBankingProductCategory


      ## EnumBankingProductCategoryV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductCategoryV1" />




      # EnumBankingProductConstraintType


      ## EnumBankingProductConstraintTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductConstraintTypeV1" />




      # EnumBankingProductDiscountEligibilityType


      ## EnumBankingProductDiscountEligibilityTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductDiscountEligibilityTypeV1"
      />




      # EnumBankingProductDiscountType


      ## EnumBankingProductDiscountTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductDiscountTypeV1" />




      # EnumBankingProductEligibilityType


      ## EnumBankingProductEligibilityTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductEligibilityTypeV1" />




      # EnumBankingProductFeatureType


      ## EnumBankingProductFeatureTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductFeatureTypeV1" />




      # EnumBankingProductFeeType


      ## EnumBankingProductFeeTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductFeeTypeV1" />


      ## EnumBankingProductFeeTypeV2

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductFeeTypeV2" />




      # EnumBankingRateApplicationMethod


      ## EnumBankingRateApplicationMethodV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingRateApplicationMethodV1" />




      # EnumBankingRepaymentType


      ## EnumBankingRepaymentTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingRepaymentTypeV1" />




      # EnumBankingTransactionStatus


      ## EnumBankingTransactionStatusV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingTransactionStatusV1" />




      # EnumBankingTransactionType


      ## EnumBankingTransactionTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingTransactionTypeV1" />




      # EnumCommonDiscoveryStatus


      ## EnumCommonDiscoveryStatusV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonDiscoveryStatusV1" />




      # EnumCommonEmailAddressPurpose


      ## EnumCommonEmailAddressPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonEmailAddressPurposeV1" />




      # EnumCommonIndustryCodeVersion


      ## EnumCommonIndustryCodeVersionV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonIndustryCodeVersionV1" />




      # EnumCommonOccupationCodeVersion


      ## EnumCommonOccupationCodeVersionV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonOccupationCodeVersionV1" />




      # EnumCommonOrganisationType


      ## EnumCommonOrganisationTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonOrganisationTypeV1" />




      # EnumCommonPhoneNumberPurpose


      ## EnumCommonPhoneNumberPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonPhoneNumberPurposeV1" />




      # EnumCommonState


      ## EnumCommonStateV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumCommonStateV1" />




      # EnumUnitOfMeasure


      ## EnumUnitOfMeasureV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumUnitOfMeasureV1" />




      # EnumWeekDay


      ## EnumWeekDayV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumWeekDayV1" />



  - name: Responses
    description: >+
      # AdminAvailabilityMetrics


      ## AdminAvailabilityMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminAvailabilityMetricsV1" />




      # AdminAverageResponseMetrics


      ## AdminAverageResponseMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminAverageResponseMetricsV1" />




      # AdminErrorMetric


      ## AdminErrorMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminErrorMetricV1" />




      # AdminInvocationMetric


      ## AdminInvocationMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminInvocationMetricV1"
      />




      # AdminInvocationMetrics


      ## AdminInvocationMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminInvocationMetricsV1" />




      # AdminPeakTPSMetrics


      ## AdminPeakTPSMetricsV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminPeakTPSMetricsV1"
      />




      # AdminPerformanceMetrics


      ## AdminPerformanceMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminPerformanceMetricsV1" />




      # AdminRejectionMetric


      ## AdminRejectionMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminRejectionMetricV1"
      />




      # AdminRejectionMetrics


      ## AdminRejectionMetricsV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminRejectionMetricsV1"
      />


      ## AdminRejectionMetricsV2

      <SchemaDefinition schemaRef="#/components/schemas/AdminRejectionMetricsV2"
      />




      # AdminSessionCountMetrics


      ## AdminSessionCountMetricsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/AdminSessionCountMetricsV1" />




      # AdminTPSMetric


      ## AdminTPSMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminTPSMetricV1" />




      # AdminTierMetric


      ## AdminTierMetricV1

      <SchemaDefinition schemaRef="#/components/schemas/AdminTierMetricV1" />




      # BankingAccountDetail


      ## BankingAccountDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingAccountDetailV1"
      />




      # BankingAccount


      ## BankingAccountV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingAccountV1" />




      # BankingAuthorisedEntity


      ## BankingAuthorisedEntityV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingAuthorisedEntityV1" />




      # BankingBalancePurse


      ## BankingBalancePurseV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingBalancePurseV1"
      />




      # BankingBalance


      ## BankingBalanceV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingBalanceV1" />




      # BankingBillerPayee


      ## BankingBillerPayeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingBillerPayeeV1" />




      # BankingCreditCardAccount


      ## BankingCreditCardAccountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingCreditCardAccountV1" />




      # BankingDirectDebit


      ## BankingDirectDebitV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingDirectDebitV1" />




      # BankingDomesticPayeeAccount


      ## BankingDomesticPayeeAccountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingDomesticPayeeAccountV1" />




      # BankingDomesticPayeeCard


      ## BankingDomesticPayeeCardV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingDomesticPayeeCardV1" />




      # BankingDomesticPayeePayId


      ## BankingDomesticPayeePayIdV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingDomesticPayeePayIdV1" />




      # BankingDomesticPayee


      ## BankingDomesticPayeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingDomesticPayeeV1"
      />




      # BankingInternationalPayeeBankDetailsBankAddress


      ## BankingInternationalPayeeBankDetailsBankAddressV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeBankDetailsBankAddressV1"
      />




      # BankingInternationalPayeeBankDetails


      ## BankingInternationalPayeeBankDetailsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeBankDetailsV1" />




      # BankingInternationalPayeeBeneficiaryDetails


      ## BankingInternationalPayeeBeneficiaryDetailsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeBeneficiaryDetailsV1"
      />




      # BankingInternationalPayee


      ## BankingInternationalPayeeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingInternationalPayeeV1" />




      # BankingLoanAccount


      ## BankingLoanAccountV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingLoanAccountV1" />




      # BankingPayeeDetail


      ## BankingPayeeDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingPayeeDetailV1" />




      # BankingPayee


      ## BankingPayeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingPayeeV1" />




      # BankingProductAdditionalInformation


      ## BankingProductAdditionalInformationV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductAdditionalInformationV1" />




      # BankingProductBundle


      ## BankingProductBundleV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductBundleV1"
      />




      # BankingProductCardArt


      ## BankingProductCardArtV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductCardArtV1"
      />




      # BankingProductConstraint


      ## BankingProductConstraintV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductConstraintV1" />




      # BankingProductDepositRate


      ## BankingProductDepositRateV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDepositRateV1" />


      ## BankingProductDepositRateV2

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDepositRateV2" />




      # BankingProductDetail


      ## BankingProductDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductDetailV1"
      />


      ## BankingProductDetailV2

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductDetailV2"
      />


      ## BankingProductDetailV3

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductDetailV3"
      />




      # BankingProductDiscountEligibility


      ## BankingProductDiscountEligibilityV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDiscountEligibilityV1" />




      # BankingProductDiscount


      ## BankingProductDiscountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductDiscountV1" />




      # BankingProductEligibility


      ## BankingProductEligibilityV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductEligibilityV1" />




      # BankingProductFeature


      ## BankingProductFeatureV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductFeatureV1"
      />




      # BankingProductFee


      ## BankingProductFeeV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductFeeV1" />


      ## BankingProductFeeV2

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductFeeV2" />




      # BankingProductLendingRate


      ## BankingProductLendingRateV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductLendingRateV1" />


      ## BankingProductLendingRateV2

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductLendingRateV2" />


      ## BankingProductLendingRateV3

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductLendingRateV3" />




      # BankingProductRateCondition


      ## BankingProductRateConditionV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateConditionV1" />




      # BankingProductRateSubTier


      ## BankingProductRateSubTierV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateSubTierV1" />




      # BankingProductRateTier


      ## BankingProductRateTierV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateTierV1" />


      ## BankingProductRateTierV2

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateTierV2" />


      ## BankingProductRateTierV3

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingProductRateTierV3" />




      # BankingProduct


      ## BankingProductV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductV1" />


      ## BankingProductV2

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductV2" />


      ## BankingProductV3

      <SchemaDefinition schemaRef="#/components/schemas/BankingProductV3" />




      # BankingScheduledPaymentFrom


      ## BankingScheduledPaymentFromV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentFromV1" />




      # BankingScheduledPaymentInterval


      ## BankingScheduledPaymentIntervalV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentIntervalV1" />




      # BankingScheduledPaymentRecurrenceEventBased


      ## BankingScheduledPaymentRecurrenceEventBasedV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceEventBasedV1"
      />




      # BankingScheduledPaymentRecurrenceIntervalSchedule


      ## BankingScheduledPaymentRecurrenceIntervalScheduleV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceIntervalScheduleV1"
      />




      # BankingScheduledPaymentRecurrenceLastWeekday


      ## BankingScheduledPaymentRecurrenceLastWeekdayV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceLastWeekdayV1"
      />




      # BankingScheduledPaymentRecurrenceOnceOff


      ## BankingScheduledPaymentRecurrenceOnceOffV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceOnceOffV1"
      />




      # BankingScheduledPaymentRecurrence


      ## BankingScheduledPaymentRecurrenceV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentRecurrenceV1" />




      # BankingScheduledPaymentSet


      ## BankingScheduledPaymentSetV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentSetV1" />




      # BankingScheduledPaymentTo


      ## BankingScheduledPaymentToV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentToV1" />




      # BankingScheduledPayment


      ## BankingScheduledPaymentV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingScheduledPaymentV1" />




      # BankingTermDepositAccount


      ## BankingTermDepositAccountV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTermDepositAccountV1" />




      # BankingTransactionDetailExtendedData


      ## BankingTransactionDetailExtendedDataV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTransactionDetailExtendedDataV1" />




      # BankingTransactionDetailExtendedDataX2P101Payload


      ## BankingTransactionDetailExtendedDataX2P101PayloadV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTransactionDetailExtendedDataX2P101PayloadV1"
      />




      # BankingTransactionDetail


      ## BankingTransactionDetailV1

      <SchemaDefinition
      schemaRef="#/components/schemas/BankingTransactionDetailV1" />




      # BankingTransaction


      ## BankingTransactionV1

      <SchemaDefinition schemaRef="#/components/schemas/BankingTransactionV1" />




      # CommonEmailAddress


      ## CommonEmailAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonEmailAddressV1" />




      # CommonOrganisationDetail


      ## CommonOrganisationDetailV1

      <SchemaDefinition
      schemaRef="#/components/schemas/CommonOrganisationDetailV1" />




      # CommonOrganisation


      ## CommonOrganisationV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonOrganisationV1" />




      # CommonPAFAddress


      ## CommonPAFAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPAFAddressV1" />




      # CommonPersonDetail


      ## CommonPersonDetailV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPersonDetailV1" />




      # CommonPerson


      ## CommonPersonV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPersonV1" />




      # CommonPhoneNumber


      ## CommonPhoneNumberV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPhoneNumberV1" />




      # CommonPhysicalAddress


      ## CommonPhysicalAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonPhysicalAddressV1"
      />




      # CommonPhysicalAddressWithPurpose


      ## CommonPhysicalAddressWithPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/CommonPhysicalAddressWithPurposeV1" />




      # CommonSimpleAddress


      ## CommonSimpleAddressV1

      <SchemaDefinition schemaRef="#/components/schemas/CommonSimpleAddressV1"
      />




      # DiscoveryOutage


      ## DiscoveryOutageV1

      <SchemaDefinition schemaRef="#/components/schemas/DiscoveryOutageV1" />




      # EnumBankingAccountOpenStatus


      ## EnumBankingAccountOpenStatusV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingAccountOpenStatusV1" />




      # EnumBankingBillerCRNType


      ## EnumBankingBillerCRNTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingBillerCRNTypeV1" />




      # EnumBankingDepositRateType


      ## EnumBankingDepositRateTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingDepositRateTypeV1" />




      # EnumBankingInterestPaymentDue


      ## EnumBankingInterestPaymentDueV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingInterestPaymentDueV1" />




      # EnumBankingLendingRateType


      ## EnumBankingLendingRateTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingLendingRateTypeV1" />




      # EnumBankingLoanPurpose


      ## EnumBankingLoanPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingLoanPurposeV1" />




      # EnumBankingMaturityInstructions


      ## EnumBankingMaturityInstructionsV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingMaturityInstructionsV1" />




      # EnumBankingNonBusinessDayTreatment


      ## EnumBankingNonBusinessDayTreatmentV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingNonBusinessDayTreatmentV1" />




      # EnumBankingPayeeType


      ## EnumBankingPayeeTypeV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumBankingPayeeTypeV1"
      />




      # EnumBankingProductCategory


      ## EnumBankingProductCategoryV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductCategoryV1" />




      # EnumBankingProductConstraintType


      ## EnumBankingProductConstraintTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductConstraintTypeV1" />




      # EnumBankingProductDiscountEligibilityType


      ## EnumBankingProductDiscountEligibilityTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductDiscountEligibilityTypeV1"
      />




      # EnumBankingProductDiscountType


      ## EnumBankingProductDiscountTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductDiscountTypeV1" />




      # EnumBankingProductEligibilityType


      ## EnumBankingProductEligibilityTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductEligibilityTypeV1" />




      # EnumBankingProductFeatureType


      ## EnumBankingProductFeatureTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductFeatureTypeV1" />




      # EnumBankingProductFeeType


      ## EnumBankingProductFeeTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductFeeTypeV1" />


      ## EnumBankingProductFeeTypeV2

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingProductFeeTypeV2" />




      # EnumBankingRateApplicationMethod


      ## EnumBankingRateApplicationMethodV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingRateApplicationMethodV1" />




      # EnumBankingRepaymentType


      ## EnumBankingRepaymentTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingRepaymentTypeV1" />




      # EnumBankingTransactionStatus


      ## EnumBankingTransactionStatusV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingTransactionStatusV1" />




      # EnumBankingTransactionType


      ## EnumBankingTransactionTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumBankingTransactionTypeV1" />




      # EnumCommonDiscoveryStatus


      ## EnumCommonDiscoveryStatusV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonDiscoveryStatusV1" />




      # EnumCommonEmailAddressPurpose


      ## EnumCommonEmailAddressPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonEmailAddressPurposeV1" />




      # EnumCommonIndustryCodeVersion


      ## EnumCommonIndustryCodeVersionV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonIndustryCodeVersionV1" />




      # EnumCommonOccupationCodeVersion


      ## EnumCommonOccupationCodeVersionV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonOccupationCodeVersionV1" />




      # EnumCommonOrganisationType


      ## EnumCommonOrganisationTypeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonOrganisationTypeV1" />




      # EnumCommonPhoneNumberPurpose


      ## EnumCommonPhoneNumberPurposeV1

      <SchemaDefinition
      schemaRef="#/components/schemas/EnumCommonPhoneNumberPurposeV1" />




      # EnumCommonState


      ## EnumCommonStateV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumCommonStateV1" />




      # EnumUnitOfMeasure


      ## EnumUnitOfMeasureV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumUnitOfMeasureV1" />




      # EnumWeekDay


      ## EnumWeekDayV1

      <SchemaDefinition schemaRef="#/components/schemas/EnumWeekDayV1" />




      # Error


      ## ErrorV1

      <SchemaDefinition schemaRef="#/components/schemas/ErrorV1" />




      # LinksPaginated


      ## LinksPaginatedV1

      <SchemaDefinition schemaRef="#/components/schemas/LinksPaginatedV1" />




      # Links


      ## LinksV1

      <SchemaDefinition schemaRef="#/components/schemas/LinksV1" />




      # MetaPaginated


      ## MetaPaginatedV1

      <SchemaDefinition schemaRef="#/components/schemas/MetaPaginatedV1" />




      # Meta


      ## MetaV1

      <SchemaDefinition schemaRef="#/components/schemas/MetaV1" />



x-tagGroups:
  - name: Banking APIs
    tags:
      - Accounts
      - Balances
      - Direct Debits
      - Payees
      - Products
      - Scheduled Payments
      - Transactions
  - name: Common APIs
    tags:
      - Customer
      - Discovery
  - name: Admin APIs
    tags:
      - Register
      - Metrics
  - name: Models
    tags:
      - Schemas
      - Enumerations
      - Responses
components:
  securitySchemes:
    CDRAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://idp.holder.cdr/authorize'
          tokenUrl: 'https://idp.holder.cdr/token'
          scopes:
            'bank:accounts.basic:read': Basic Bank Account Data
            'bank:accounts.detail:read': Detailed Bank Account Data
            'bank:transactions:read': Bank Transaction Data
            'bank:payees:read': Bank Payee Data
            'bank:regular_payments:read': Bank Regular Payments
            'common:customer.basic:read': Basic Customer Data
            'common:customer.detail:read': Detailed Customer Data
    RegisterAuth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://idp.cdr.register/token'
          scopes:
            'cdr-register:bank:read': CDR Bank Read Access
  schemas:
    EnumBankingProductCategoryV1:
      description: >

        The Product Category enumeration lists the available product categories
        for categorising products and accounts. These are explained in the
        following tables:


        **Deposit Products**


        | Enum | Description

        |------|------------|

        | TRANS_AND_SAVINGS_ACCOUNTS | This grouping of products includes all
        accounts where cash is deposited in the account and is accessible to the
        customer when they choose. These are given many names on the market
        including Cash Accounts, Saving Accounts, Transaction Accounts, Current
        Accounts, Cheque Accounts, Passbook Accounts, etc... |

        | TERM_DEPOSITS              | This grouping of products includes all
        accounts where cash is deposited in the account for a set time period
        with restrictions on when funds can be withdrawn. Includes traditional
        Term Deposits and specialised deposits with either fixed terms or notice
        periods for withdrawal of funds. |

        | TRAVEL_CARDS               | This grouping of products includes
        prepaid cards with multi-currency capabilities.|

        | REGULATED_TRUST_ACCOUNTS   | This grouping of products includes
        accounts were funds are held in trust in regulated industries with
        complex rules embedded on how the products must operate. Industries that
        require this sort of product include real estate agents, solicitors and
        conveyancers. |


        **Lending Products**


        | Enum | Description

        |------|------------|

        RESIDENTIAL_MORTGAGES | This grouping of products includes all lending
        products that are available for the primary purpose of borrowing for the
        purpose of purchasing or renovating residential property, where a
        residential property will be used as security. This group will include
        both fixed, variable & secured overdraft types of product and may
        include both owner-occupied and investment purpose borrowing.

        CRED_AND_CHRG_CARDS | This grouping of products includes all lending
        products that are issued for the purpose of allowing a flexible line of
        credit accessed through use of a card. These may be called various names
        including Credit Cards, Charge Cards and Store Cards.

        PERS_LOANS | This grouping of products includes all lending for personal
        purposes that is not a residential mortgage, credit card or margin
        lending. These loans may be unsecured loans and term loans for purchase
        assets used as security such as motor vehicles. These may be called
        various names including Personal Loans and Car Loans.

        MARGIN_LOANS | This grouping of products includes all types of margin
        loans which let you borrow money to invest in traded assets including
        shares & commodities or in managed funds.

        LEASES | This grouping of products will include all types of leases
        including Financial Lease, Operating Lease, Sale and leaseback, etc...

        TRADE FINANCE | This grouping of products includes specialised lending
        products specifically designed to facilitate domestic & international
        trade. This includes the issuance of letters of credit, factoring,
        export credit.

        OVERDRAFTS | This grouping of products includes all types of lending
        which allows for the loan amount to be withdrawn, repaid, and redrawn
        again in any manner and any number of times, until the arrangement
        expires. These loans may be secured or unsecured, and generally don’t
        have set / minimum repayment requirements.

        BUSINESS_LOANS | This grouping of products incorporates all types of
        lending for business purpose that is not a trade finance facility,
        lease, overdraft, residential mortgage, credit card or margin lending.
        It includes traditional term loans, bank guarantees and commercial
        bills. This category would incorporate both secured and unsecured
        business purpose lending including all business purpose equipment
        finance that is not covered by a lease.
      enum:
        - TRANS_AND_SAVINGS_ACCOUNTS
        - TERM_DEPOSITS
        - TRAVEL_CARDS
        - REGULATED_TRUST_ACCOUNTS
        - RESIDENTIAL_MORTGAGES
        - CRED_AND_CHRG_CARDS
        - PERS_LOANS
        - MARGIN_LOANS
        - LEASES
        - TRADE_FINANCE
        - OVERDRAFTS
        - BUSINESS_LOANS
      type: string
      example: TRANS_AND_SAVINGS_ACCOUNTS
    EnumBankingAccountOpenStatusV1:
      default: OPEN
      description: >-
        Open or closed status for the account. If not present then OPEN is
        assumed
      enum:
        - OPEN
        - CLOSED
      type: string
    BankingAccountV1:
      properties:
        accountId:
          description: >-
            A unique ID of the account adhering to the standards for ID
            permanence
          type: string
          format: uuid
        creationDate:
          description: Date that the account was created (if known)
          type: string
          format: date
        displayName:
          description: >-
            The display name of the account as defined by the bank. This should
            not incorporate account numbers or PANs. If it does the values
            should be masked according to the rules of the MaskedAccountString
            common type.
          type: string
          example: ACME Savings Account
        isOwned:
          default: true
          description: >-
            Flag indicating that the customer associated with the authorisation
            is an owner of the account. Does not indicate sole ownership,
            however. If not present then 'true' is assumed
          type: boolean
        maskedNumber:
          description: >-
            A masked version of the account. Whether BSB/Account Number, Credit
            Card PAN or another number
          type: string
          format: MaskedAccountString
          example: XXXX-XXXX-XXXX-1234
        nickname:
          description: A customer supplied nick name for the account
          type: string
          example: Holiday Fund
        openStatus:
          $ref: '#/components/schemas/EnumBankingAccountOpenStatusV1'
        productCategory:
          $ref: '#/components/schemas/EnumBankingProductCategoryV1'
        productName:
          description: >-
            The unique identifier of the account as defined by the data holder
            (akin to model number for the account)
          type: string
          example: ACME Savings Maximiser
      required:
        - accountId
        - displayName
        - maskedNumber
        - productCategory
        - productName
      type: object
    LinksPaginatedV1:
      properties:
        first:
          description: >-
            URI to the first page of this set. Mandatory if this response is not
            the first page
          type: string
          format: uri
        last:
          description: >-
            URI to the last page of this set. Mandatory if this response is not
            the last page
          type: string
          format: uri
        next:
          description: >-
            URI to the next page of this set. Mandatory if this response is not
            the last page
          type: string
          format: uri
        prev:
          description: >-
            URI to the previous page of this set. Mandatory if this response is
            not the first page
          type: string
          format: uri
        self:
          description: Fully qualified link that generated the current response document
          type: string
          format: uri
      required:
        - self
      type: object
      x-conditional:
        - prev
        - next
        - first
        - last
    MetaPaginatedV1:
      properties:
        totalPages:
          description: >-
            The total number of pages in the full set. See
            [pagination](#pagination).
          type: integer
          minimum: 0
        totalRecords:
          description: >-
            The total number of records in the full set. See
            [pagination](#pagination).
          type: integer
          minimum: 0
      required:
        - totalPages
        - totalRecords
      type: object
    ResponseBankingAccountListV1:
      properties:
        data:
          type: object
          properties:
            accounts:
              description: >-
                The list of accounts returned. If the filter results in an empty
                set then this array may have no records
              items:
                $ref: '#/components/schemas/BankingAccountV1'
              type: array
          required:
            - accounts
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    BankingBalancePurseV1:
      properties:
        amount:
          description: The balance available for this additional currency purse
          type: string
          format: AmountString
          example: '10.00'
        currency:
          description: The currency for the purse
          type: string
          format: CurrencyString
          example: AUD
      required:
        - amount
      type: object
    BankingBalanceV1:
      properties:
        accountId:
          description: >-
            A unique ID of the account adhering to the standards for ID
            permanence
          type: string
        amortisedLimit:
          description: >-
            Object representing the available limit amortised according to
            payment schedule. Assumed to be zero if absent
          type: string
          format: AmountString
          example: '10.00'
        availableBalance:
          description: >-
            Balance representing the amount of funds available for transfer.
            Assumed to be zero or positive
          type: string
          format: AmountString
          example: '10.00'
        creditLimit:
          description: >-
            Object representing the maximum amount of credit that is available
            for this account. Assumed to be zero if absent
          type: string
          format: AmountString
          example: '10.00'
        currency:
          description: The currency for the balance amounts. If absent assumed to be AUD
          type: string
          format: CurrencyString
          example: AUD
        currentBalance:
          description: >-
            The balance of the account at this time. Should align to the balance
            available via other channels such as Internet Banking. Assumed to be
            negative if the customer has money owing
          type: string
          format: AmountString
          example: '10.00'
        purses:
          description: >-
            Optional array of balances for the account in other currencies.
            Included to support accounts that support multi-currency purses such
            as Travel Cards
          items:
            $ref: '#/components/schemas/BankingBalancePurseV1'
          type: array
      required:
        - accountId
        - availableBalance
        - currentBalance
      type: object
    ResponseBankingAccountsBalanceListV1:
      properties:
        data:
          type: object
          properties:
            balances:
              description: The list of balances returned
              items:
                $ref: '#/components/schemas/BankingBalanceV1'
              type: array
          required:
            - balances
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    ErrorV1:
      type: object
      properties:
        code:
          description: 'Must be one of the following: 0001 – Account not able to be found'
          type: string
        detail:
          description: ID of the account not found
          type: string
        meta:
          description: Optional additional data for specific error types
          properties: {}
          type: object
        title:
          description: 'Must be one of the following: Invalid account'
          type: string
      required:
        - code
        - detail
        - title
    ResponseErrorListV1:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorV1'
          type: array
      required:
        - errors
      type: object
    BankingAuthorisedEntityV1:
      properties:
        abn:
          description: Australian Business Number for the authorised entity
          type: string
          example: 54 624 797 655
          format: ABNString
        acn:
          description: Australian Company Number for the authorised entity
          type: string
          example: 624 797 655
          format: ACNString
        arbn:
          description: Australian Registered Body Number for the authorised entity
          type: string
          example: 000 000 123
          format: ARBNString
        description:
          description: >-
            Description of the authorised entity derived from previously
            executed direct debits
          type: string
          example: Biza Pty Ltd
        financialInstitution:
          description: >-
            Name of the financial institution through which the direct debit
            will be executed. Is required unless the payment is made via a
            credit card scheme
          type: string
          example: ACME Bank
      type: object
    BankingDirectDebitV1:
      properties:
        accountId:
          description: >-
            A unique ID of the account adhering to the standards for ID
            permanence.
          type: string
          example: a7081742-79b2-4930-becb-c9dd80d25b24
        authorisedEntity:
          $ref: '#/components/schemas/BankingAuthorisedEntityV1'
        lastDebitAmount:
          description: The amount of the last debit executed under this authorisation
          type: string
          format: AmountString
          example: '10.00'
        lastDebitDateTime:
          description: >-
            The date and time of the last debit executed under this
            authorisation
          type: string
          format: date-time
      required:
        - accountId
        - authorisedEntity
      type: object
    ResponseBankingDirectDebitAuthorisationListV1:
      properties:
        data:
          type: object
          properties:
            directDebitAuthorisations:
              description: The list of authorisations returned
              items:
                $ref: '#/components/schemas/BankingDirectDebitV1'
              type: array
          required:
            - directDebitAuthorisations
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    EnumCommonStateV1:
      description: >-
        State in which the address belongs. Valid enumeration defined by
        Australia Post PAF code file [State Type
        Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf).
        NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
      enum:
        - NSW
        - QLD
        - VIC
        - NT
        - WA
        - SA
        - TAS
        - ACT
        - AAT
      type: string
    CommonPAFAddressV1:
      description: >-
        Australian address formatted according to the file format defined by the
        [PAF file
        format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
      properties:
        buildingName1:
          description: Building/Property name 1
          type: string
        buildingName2:
          description: Building/Property name 2
          type: string
        dpid:
          description: >-
            Unique identifier for an address as defined by Australia Post.  Also
            known as Delivery Point Identifier
          type: string
        flatUnitNumber:
          description: 'Unit number (including suffix, if applicable)'
          type: string
        flatUnitType:
          description: Type of flat or unit for the address
          type: string
        floorLevelNumber:
          description: Floor or level number (including alpha characters)
          type: string
        floorLevelType:
          description: Type of floor or level for the address
          type: string
        localityName:
          description: Full name of locality
          type: string
        lotNumber:
          description: Allotment number for the address
          type: string
        postalDeliveryNumber:
          description: Postal delivery number if the address is a postal delivery type
          type: integer
          format: PositiveInteger
        postalDeliveryNumberPrefix:
          description: Postal delivery number prefix related to the postal delivery number
          type: string
        postalDeliveryNumberSuffix:
          description: Postal delivery number suffix related to the postal delivery number
          type: string
        postalDeliveryType:
          description: >-
            Postal delivery type. (eg. PO BOX). Valid enumeration defined by
            Australia Post PAF code file
          type: string
        postcode:
          description: Postcode for the locality
          type: string
        state:
          $ref: '#/components/schemas/EnumCommonStateV1'
        streetName:
          description: The name of the street
          type: string
        streetSuffix:
          description: >-
            The street type suffix. Valid enumeration defined by Australia Post
            PAF code file
          type: string
        streetType:
          description: >-
            The street type. Valid enumeration defined by Australia Post PAF
            code file
          type: string
        thoroughfareNumber1:
          description: >-
            Thoroughfare number for a property (first number in a property
            ranged address)
          type: integer
          minimum: 1
        thoroughfareNumber1Suffix:
          description: >-
            Suffix for the thoroughfare number. Only relevant is
            thoroughfareNumber1 is populated
          type: string
        thoroughfareNumber2:
          description: >-
            Second thoroughfare number (only used if the property has a ranged
            address eg 23-25)
          type: integer
          minimum: 1
        thoroughfareNumber2Suffix:
          description: >-
            Suffix for the second thoroughfare number. Only relevant is
            thoroughfareNumber2 is populated
          type: string
      required:
        - localityName
        - postcode
        - state
      type: object
    CommonSimpleAddressV1:
      properties:
        addressLine1:
          description: First line of the standard address object
          type: string
        addressLine2:
          description: Second line of the standard address object
          type: string
        addressLine3:
          description: Third line of the standard address object
          type: string
        city:
          description: Name of the city or locality
          type: string
        country:
          default: AUS
          description: >-
            A valid [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            code. Australia (AUS) is assumed if country is not present.
          type: string
          format: CountryString
        mailingName:
          description: >-
            Name of the individual or business formatted for inclusion in an
            address used for physical mail
          type: string
        postcode:
          description: Mandatory for Australian addresses
          type: string
        state:
          description: >-
            Free text if the country is not Australia. If country is Australia
            then must be one of the values defined by the [State Type
            Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
            in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          type: string
      required:
        - addressLine1
        - city
        - state
      type: object
      x-conditional:
        - postcode
    CommonPhysicalAddressV1:
      properties:
        addressUType:
          description: The type of address object present
          enum:
            - simple
            - paf
          type: string
        paf:
          $ref: '#/components/schemas/CommonPAFAddressV1'
        simple:
          $ref: '#/components/schemas/CommonSimpleAddressV1'
      required:
        - addressUType
      type: object
      x-conditional:
        - simple
        - paf
    BankingCreditCardAccountV1:
      properties:
        minPaymentAmount:
          description: The minimum payment amount due for the next card payment
          type: string
          format: AmountString
          example: '10.00'
        paymentCurrency:
          description: If absent assumes AUD
          type: string
          format: CurrencyString
          example: AUD
        paymentDueAmount:
          description: The amount due for the next card payment
          type: string
          format: AmountString
          example: '10.00'
        paymentDueDate:
          description: Date that the next payment for the card is due
          type: string
          format: date
      required:
        - minPaymentAmount
        - paymentDueAmount
        - paymentDueDate
      type: object
    BankingProductRateConditionV1:
      description: Defines a condition for the applicability of a tiered rate
      properties:
        additionalInfo:
          description: Display text providing more information on the condition
          type: string
        additionalInfoUri:
          description: Link to a web page with more information on this condition
          type: string
          format: uri
      type: object
    EnumBankingRateApplicationMethodV1:
      description: >-
        The method used to calculate the amount to be applied using one or more
        tiers. A single rate may be applied to the entire balance or each
        applicable tier rate is applied to the portion of the balance that falls
        into that tier (referred to as 'bands' or 'steps')
      enum:
        - WHOLE_BALANCE
        - PER_TIER
      type: string
    EnumUnitOfMeasureV1:
      description: >-
        The unit of measure that applies to the tierValueMinimum and
        tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the
        case of loan-to-value ratio or LVR). Tier term period representing a
        discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit
        tiers)
      enum:
        - DOLLAR
        - PERCENT
        - MONTH
        - DAY
      type: string
    BankingProductRateTierV2:
      description: Defines the criteria and conditions for which a rate applies
      properties:
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateConditionV1'
        maximumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the upper bound of
            the tier or band. For a tier with a discrete value (as opposed to a
            range of values e.g. 1 month) this must be the same as
            tierValueMinimum. Where this is the same as the tierValueMinimum
            value of the next-higher tier the referenced tier should be
            exclusive of this value. For example a term deposit of 2 months
            falls into the upper tier of the following tiers: (1 – 2 months, 2 –
            3 months). If absent the tier's range has no upper bound.
          type: number
        minimumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the lower bound of
            the tier. The tier should be inclusive of this value
          type: number
        name:
          description: A display name for the tier
          type: string
        rateApplicationMethod:
          $ref: '#/components/schemas/EnumBankingRateApplicationMethodV1'
        unitOfMeasure:
          $ref: '#/components/schemas/EnumUnitOfMeasureV1'
      required:
        - minimumValue
        - name
        - unitOfMeasure
      type: object
    BankingProductDepositRateV2:
      properties:
        additionalInfo:
          description: Display text providing more information on the rate
          type: string
          example: A great deposit rate
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [depositRateType](#tocSproductdepositratetypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [depositRateType](#tocSproductdepositratetypedoc)
          type: string
          example: 'Type specific value, see docs'
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P30D
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P1D
        depositRateType:
          description: >-
            The type of rate (base, bonus, etc). See the next section for an
            overview of valid values and their meaning
          enum:
            - FIXED
            - BONUS
            - BUNDLE_BONUS
            - VARIABLE
            - INTRODUCTORY
            - FLOATING
            - MARKET_LINKED
          type: string
          example: FIXED
        rate:
          description: The rate to be applied
          type: string
          format: RateString
          example: '0.011'
        tiers:
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV2'
          type: array
      required:
        - depositRateType
        - rate
      type: object
      x-conditional:
        - additionalValue
    EnumBankingProductFeatureTypeV1:
      description: >

        Each Product or Account has a set of Product Features. These are
        explained in a table as follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        CARD_ACCESS | A card is available for the product to access funds | Text
        describing list of card types that this product can be linked to

        ADDITIONAL_CARDS | Additional cards can be requested | The maximum
        number of additional cards. If no maximum then should be set to null

        UNLIMITED_TXNS | Unlimited free transactions available | NA

        FREE_TXNS | A set number of free transactions available per month | The
        number of free transactions

        FREE_TXNS_ALLOWANCE | A set amount of transaction fee value that is
        discounted per month | The amount of transaction fee discounted (in AUD)

        LOYALTY_PROGRAM | A points based loyalty program is available | Name of
        the loyalty program

        OFFSET | An offset account can be connected to the product | NA

        OVERDRAFT | An overdraft can be applied for | NA

        REDRAW | Redraw of repaid principal above minimum required is available
        | NA

        INSURANCE | Insurance is provided as an additional feature of the
        product | Text description of the type of insurance (e.g. Travel
        Insurance)

        BALANCE_TRANSFERS | Balance transfers can be made to the account (eg.
        for credit cards) | NA

        INTEREST_FREE | Interest free period for purchases | Interest free
        period. Formatted according to ISO 8601 Durations

        INTEREST_FREE_TRANSFERS | Interest free period for balance transfers |
        Interest free period. Formatted according to ISO 8601 Durations

        DIGITAL_WALLET | A Digital wallet can be attached to the product | The
        name or brand of the wallet

        DIGITAL_BANKING | Access is available to online banking features for the
        product | NA

        NPP_PAYID | An account of this product type can be used as the target of
        an NPP PayID | NA

        NPP_ENABLED | An account of this product type can be used to receive
        funds as a result of a BSB/Number based NPP payment | NA

        DONATE_INTEREST | Indicates that interest generated from the product can
        be automatically donated to a charity or community group | NA

        BILL_PAYMENT | The product can be attached to an automatic budgeting and
        bill payment service | Optional name of the service

        COMPLEMENTARY_PRODUCT_DISCOUNTS | Indicates that complementary,
        discounted offerings (such as gift cards, or discounted travel) is
        available | Description of the complementary offering

        BONUS_REWARDS | Bonus loyalty rewards points are available | Number of
        points available

        NOTIFICATIONS | Advanced notifications are available for the product |
        Description of the notification capability

        OTHER | Another feature that can not be included in any of the other
        categories. The additionalInfo field is mandatory for this type | NA
      enum:
        - CARD_ACCESS
        - ADDITIONAL_CARDS
        - UNLIMITED_TXNS
        - FREE_TXNS
        - FREE_TXNS_ALLOWANCE
        - LOYALTY_PROGRAM
        - OFFSET
        - OVERDRAFT
        - REDRAW
        - INSURANCE
        - BALANCE_TRANSFERS
        - INTEREST_FREE
        - INTEREST_FREE_TRANSFERS
        - DIGITAL_WALLET
        - DIGITAL_BANKING
        - NPP_PAYID
        - NPP_ENABLED
        - DONATE_INTEREST
        - BILL_PAYMENT
        - COMPLEMENTARY_PRODUCT_DISCOUNTS
        - BONUS_REWARDS
        - NOTIFICATIONS
        - OTHER
      type: string
      example: CARD_ACCESS
    BankingProductFeatureV1:
      properties:
        additionalInfo:
          description: >-
            Display text providing more information on the feature. Mandatory if
            the [feature type](#tocSproductfeaturetypedoc) is set to OTHER
          type: string
          example: Additional Feature Information
        additionalInfoUri:
          description: Link to a web page with more information on this feature
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [featureType](#tocSproductfeaturetypedoc) specified. Whether
            mandatory or not is dependent on the value of the
            [featureType.](#tocSproductfeaturetypedoc)
          example: 'Type specific value, see docs'
          type: string
        featureType:
          $ref: '#/components/schemas/EnumBankingProductFeatureTypeV1'
      required:
        - featureType
      type: object
      x-conditional:
        - additionalValue
        - additionalInfo
    EnumBankingProductDiscountTypeV1:
      description: >

        Each Product or Account has a set of Discount Types types. These are
        explained in a table as follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        BALANCE | Discount on a fee for maintaining a set balance. As the
        discount applies to a fee the period is the same as for the fee | The
        minimum balance in AmountString format

        DEPOSITS | Discount for depositing a certain amount of money in a
        period. As the discount applies to a fee the period is the same as for
        the fee | The minimum deposit amount in AmountString format

        PAYMENTS | Discount for outbound payments from the account under a
        certain amount of money in a period. As the discount applies to a fee
        the period is the same as for the fee | The payment threshold amount in
        AmountString format

        FEE_CAP | The amount, balanceRate, transactionRate, accruedRate or
        feeRate fields of the discount represent the maximum amount charged in a
        time period | The time period for which the fee cap applies. Formatted
        according to ISO 8601 Durations

        ELIGIBILITY_ONLY | Discount applies based on customer eligibility
        (eligibility array must be populated) | N/A
      enum:
        - BALANCE
        - DEPOSITS
        - PAYMENTS
        - FEE_CAP
        - ELIGIBILITY_ONLY
      type: string
      example: BALANCE
    EnumBankingProductDiscountEligibilityTypeV1:
      description: >

        Each Product or Account has a set of Discount Eligibility Types types.
        These are explained in a table as follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        BUSINESS | A business or other non-person legal entity | NA

        PENSION_RECIPIENT | A recipient of a government pension may receive the
        discount | Optional. Should contain a description of which pensions
        qualify

        MIN_AGE | Only customers older than a minimum age receive the discount |
        The minimum age in years

        MAX_AGE | Only customers younger than a maximum age receive the discount
        | The maximum age in years

        MIN_INCOME | The customer must have an income greater than a specified
        threshold to obtain the discount | Minimum income in AmountString format

        MIN_TURNOVER | Only a business with greater than a minimum turnover is
        eligible | Minimum turnover in AmountString format

        STAFF | Only a staff member of the provider may receive the discount |
        NA

        STUDENT | Only students may receive the discount | Optional. Should
        contain a description of who qualifies as a student, e.g. do apprentices
        qualify?

        EMPLOYMENT_STATUS | An eligibility constraint based on employment status
        applies | A description of the status required

        RESIDENCY_STATUS | An eligibility constraint based on residency status
        applies | A description of the status required

        NATURAL_PERSON | The customer must be a natural person rather than
        another legal entity | NA

        INTRODUCTORY | The discount is only available during an introductory
        period | The period of time for the introductory discount. Formatted
        according to ISO 8601 Durations

        OTHER | Another eligibility criteria exists as described in the
        additionalInfo field (if this option is specified then the
        additionalInfo field is mandatory) | NA
      enum:
        - BUSINESS
        - PENSION_RECIPIENT
        - MIN_AGE
        - MAX_AGE
        - MIN_INCOME
        - MIN_TURNOVER
        - STAFF
        - STUDENT
        - EMPLOYMENT_STATUS
        - RESIDENCY_STATUS
        - NATURAL_PERSON
        - INTRODUCTORY
        - OTHER
      type: string
      example: BUSINESS
    BankingProductDiscountEligibilityV1:
      properties:
        additionalInfo:
          description: >-
            Display text providing more information on this eligibility
            constraint. Whether mandatory or not is dependent on the value of
            discountEligibilityType.
          type: string
          example: Eligibility criteria explanation
        additionalInfoUri:
          description: >-
            Link to a web page with more information on this eligibility
            constraint
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
            specified. Whether mandatory or not is dependent on the value of
            [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
          type: string
          example: 'Type specific value, see docs'
        discountEligibilityType:
          $ref: '#/components/schemas/EnumBankingProductDiscountEligibilityTypeV1'
      required:
        - discountEligibilityType
      type: object
      x-conditional:
        - additionalValue
    BankingProductDiscountV1:
      properties:
        accruedRate:
          description: >-
            A discount rate calculated based on a proportion of the calculated
            interest accrued on the account. Note that the currency of the fee
            discount is expected to be the same as the currency of the fee
            itself. One of amount, balanceRate, transactionRate, accruedRate and
            feeRate is mandatory. Unless noted in additionalInfo, assumes the
            application and calculation frequency are the same as the
            corresponding fee
          type: string
          format: RateString
          example: '0.012'
        additionalInfo:
          description: Display text providing more information on the discount
          type: string
          example: Discount Information
        additionalInfoUri:
          description: Link to a web page with more information on this discount
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [discountType](#tocSproductdiscounttypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [discountType](#tocSproductdiscounttypedoc)
          type: string
          example: 'Type specific value, see docs'
        amount:
          description: >-
            Dollar value of the discount. One of amount, balanceRate,
            transactionRate, accruedRate and feeRate is mandatory.
          type: string
          format: AmountString
          example: '11.00'
        balanceRate:
          description: >-
            A discount rate calculated based on a proportion of the balance.
            Note that the currency of the fee discount is expected to be the
            same as the currency of the fee itself. One of amount, balanceRate,
            transactionRate, accruedRate and feeRate is mandatory. Unless noted
            in additionalInfo, assumes the application and calculation frequency
            are the same as the corresponding fee
          type: string
          format: RateString
          example: '0.0103'
        description:
          description: Description of the discount
          type: string
        discountType:
          $ref: '#/components/schemas/EnumBankingProductDiscountTypeV1'
        eligibility:
          description: >-
            Eligibility constraints that apply to this discount. Mandatory if
            discountType is ELIGIBILITY_ONLY.
          items:
            $ref: '#/components/schemas/BankingProductDiscountEligibilityV1'
          type: array
        feeRate:
          description: >-
            A discount rate calculated based on a proportion of the fee to which
            this discount is attached. Note that the currency of the fee
            discount is expected to be the same as the currency of the fee
            itself. One of amount, balanceRate, transactionRate, accruedRate and
            feeRate is mandatory. Unless noted in additionalInfo, assumes the
            application and calculation frequency are the same as the
            corresponding fee
          type: string
          format: RateString
          example: '0.0124'
        transactionRate:
          description: >-
            A discount rate calculated based on a proportion of a transaction.
            Note that the currency of the fee discount is expected to be the
            same as the currency of the fee itself. One of amount, balanceRate,
            transactionRate, accruedRate and feeRate is mandatory
          type: string
          format: RateString
          example: '0.00234'
      required:
        - description
        - discountType
      type: object
      x-conditional:
        - balanceRate
        - transactionRate
        - accruedRate
        - feeRate
        - additionalValue
        - amount
    EnumBankingProductFeeTypeV1:
      description: >

        Each Product or Account has a set of Fee Types. These are explained in a
        table as follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        PERIODIC | A periodic fee such as a monthly account servicing fee | The
        period of charge. Formatted according to ISO 8601 Durations

        TRANSACTION | A fee associated with any transaction (incorporates
        WITHDRAWAL, DEPOSIT, PAYMENT and PURCHASE) | NA

        WITHDRAWAL | A fee associated with making a withdrawal | NA

        DEPOSIT | A fee associated with making a deposit | NA

        PAYMENT | A fee associated with making a payment | NA

        PURCHASE | A fee associated with making a purchase at a merchant | NA

        EVENT | A fee in relation to a particular event (e.g. NA ordering a new
        card, viewing a balance or stopping a cheque) | NA

        UPFRONT | A fee paid at the beginning of the product NA lifecycle, such
        as an establishment fee, loyalty program fee or application fee | NA

        EXIT | A fee for closing the product | NA
      enum:
        - PERIODIC
        - TRANSACTION
        - WITHDRAWAL
        - DEPOSIT
        - PAYMENT
        - PURCHASE
        - EVENT
        - UPFRONT
        - EXIT
      type: string
      example: EXIT
    BankingProductFeeV1:
      properties:
        accrualFrequency:
          description: >-
            The indicative frequency with which the fee is calculated on the
            account. Only applies if balanceRate or accruedRate is also present.
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P1D
        accruedRate:
          description: >-
            A fee rate calculated based on a proportion of the calculated
            interest accrued on the account. One of amount, balanceRate,
            transactionRate and accruedRate is mandatory unless the feeType is
            `VARIABLE`
          type: string
          format: RateString
          example: '0.002'
        additionalInfo:
          description: Display text providing more information on the fee
          type: string
          example: Additional Fee Information
        additionalInfoUri:
          description: Link to a web page with more information on this fee
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [feeType](#tocSproductfeetypedoc) specified. Whether mandatory or
            not is dependent on the value of [feeType](#tocSproductfeetypedoc)
          type: string
          example: 'Type specific value, see docs'
        amount:
          description: >-
            The amount charged for the fee. One of amount, balanceRate,
            transactionRate and accruedRate is mandatory unless the feeType is
            `VARIABLE`
          type: string
          format: AmountString
          example: '10.01'
        balanceRate:
          description: >-
            A fee rate calculated based on a proportion of the balance. One of
            amount, balanceRate, transactionRate and accruedRate is mandatory
            unless the feeType is `VARIABLE`
          type: string
          format: RateString
          example: '0.0023'
        currency:
          description: The currency the fee will be charged in. Assumes AUD if absent
          type: string
          format: CurrencyString
          example: AUD
        discounts:
          description: An optional list of discounts to this fee that may be available
          items:
            $ref: '#/components/schemas/BankingProductDiscountV1'
          type: array
        feeType:
          $ref: '#/components/schemas/EnumBankingProductFeeTypeV1'
        name:
          description: Name of the fee
          type: string
          example: Fee Name
        transactionRate:
          description: >-
            A fee rate calculated based on a proportion of a transaction. One of
            amount, balanceRate, transactionRate and accruedRate is mandatory
            unless the feeType is `VARIABLE`
          type: string
          format: RateString
          example: '0.0023'
      required:
        - feeType
        - name
      type: object
      x-conditional:
        - additionalValue
        - amount
        - balanceRate
        - transactionRate
        - accruedRate
    EnumBankingInterestPaymentDueV1:
      description: >-
        When loan payments are due to be paid within each period. The investment
        benefit of earlier payments affect the rate that can be offered
      enum:
        - IN_ARREARS
        - IN_ADVANCE
      type: string
    EnumBankingLendingRateTypeV1:
      description: >

        The type of rate (base, bonus, etc). These are explained in a table as
        follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        FIXED | Fixed rate for a period of time | The period of time fixed.
        Formatted according to ISO 8601 Durations

        VARIABLE | A variable base rate for the product | NA

        INTRODUCTORY | An introductory discount that will expire after a set
        period | The period of time for the introductory rate. Formatted
        according to ISO 8601 Durations

        DISCOUNT | A specific discount rate that may be applied. A discount rate
        reduces the interest payable | Description of the discount rate that is
        applicable

        PENALTY | A specific penalty rate that may be applied. A penalty rate
        increases the interest payable | Description of the penalty rate that is
        applicable

        FLOATING | A floating rate is relatively fixed but still adjusts under
        specific circumstances | Details of the float parameters

        MARKET_LINKED | A rate that is linked to a specific market, commodity or
        asset class | Details of the market linkage

        CASH_ADVANCE | Specific rate applied to cash advances from the account |
        NA

        PURCHASE | Specific rate applied to purchases from the account | NA

        BUNDLE_DISCOUNT_FIXED | A discount rate off the fixed rate obtained by
        originating a bundle instead of a standalone product | The name of the
        bundle

        BUNDLE_DISCOUNT_VARIABLE | A discount rate off the variable rate
        obtained by originating a bundle instead of a standalone product | The
        name of the bundle
      enum:
        - FIXED
        - VARIABLE
        - INTRODUCTORY
        - DISCOUNT
        - PENALTY
        - FLOATING
        - MARKET_LINKED
        - CASH_ADVANCE
        - PURCHASE
        - BUNDLE_DISCOUNT_FIXED
        - BUNDLE_DISCOUNT_VARIABLE
      type: string
    EnumBankingLoanPurposeV1:
      description: >-
        The reason for taking out the loan. If absent, the lending rate is
        applicable to all loan purposes
      enum:
        - OWNER_OCCUPIED
        - INVESTMENT
      type: string
    EnumBankingRepaymentTypeV1:
      description: >-
        Options in place for repayments. If absent, the lending rate is
        applicable to all repayment types
      enum:
        - INTEREST_ONLY
        - PRINCIPAL_AND_INTEREST
      type: string
    BankingProductLendingRateV2:
      properties:
        additionalInfo:
          description: Display text providing more information on the rate.
          type: string
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [lendingRateType](#tocSproductlendingratetypedoc)
          type: string
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
        comparisonRate:
          description: A comparison rate equivalent for this rate
          type: string
          format: RateString
        interestPaymentDue:
          $ref: '#/components/schemas/EnumBankingInterestPaymentDueV1'
        lendingRateType:
          $ref: '#/components/schemas/EnumBankingLendingRateTypeV1'
        loanPurpose:
          $ref: '#/components/schemas/EnumBankingLoanPurposeV1'
        rate:
          description: The rate to be applied
          type: string
          format: RateString
        repaymentType:
          $ref: '#/components/schemas/EnumBankingRepaymentTypeV1'
        tiers:
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV2'
          type: array
      required:
        - lendingRateType
        - rate
      type: object
      x-conditional:
        - additionalValue
    BankingLoanAccountV1:
      properties:
        loanEndDate:
          description: Date that the loan is due to be repaid in full
          type: string
          format: date
        maxRedraw:
          description: >-
            Maximum amount of funds that can be redrawn. If not present redraw
            is not available even if the feature exists for the account
          type: string
          format: AmountString
          example: '1000.00'
        maxRedrawCurrency:
          description: If absent assumes AUD
          type: string
          format: CurrencyString
          example: AUS
        minInstalmentAmount:
          description: Minimum amount of next instalment
          type: string
          format: AmountString
          example: '122.22'
        minInstalmentCurrency:
          description: If absent assumes AUD
          type: string
          format: CurrencyString
          example: AUD
        minRedraw:
          description: Minimum redraw amount
          type: string
          format: AmountString
          example: '500.00'
        minRedrawCurrency:
          description: If absent assumes AUD
          type: string
          format: CurrencyString
          example: AUD
        nextInstalmentDate:
          description: Next date that an instalment is required
          type: string
          format: date
        offsetAccountEnabled:
          description: >-
            Set to true if one or more offset accounts are configured for this
            loan account
          type: boolean
          example: false
        offsetAccountIds:
          description: >-
            The accountIDs of the configured offset accounts attached to this
            loan. Only offset accounts that can be accessed under the current
            authorisation should be included. It is expected behaviour that
            offsetAccountEnabled is set to true but the offsetAccountIds field
            is absent or empty. This represents a situation where an offset
            account exists but details can not be accessed under the current
            authorisation
          items:
            type: string
          type: array
        originalLoanAmount:
          description: Optional original loan value
          type: string
          format: AmountString
        originalLoanCurrency:
          description: If absent assumes AUD
          type: string
          format: CurrencyString
        originalStartDate:
          description: Optional original start date for the loan
          type: string
          format: date
        repaymentFrequency:
          description: >-
            The expected or required repayment frequency. Formatted according to
            [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
        repaymentType:
          $ref: '#/components/schemas/EnumBankingRepaymentTypeV1'
      required:
        - loanEndDate
        - nextInstalmentDate
        - repaymentFrequency
      type: object
    EnumBankingMaturityInstructionsV1:
      description: >-
        Current instructions on action to be taken at maturity. This includes
        default actions that may be specified in the terms and conditions for
        the product e.g. roll-over to the same term and frequency of interest
        payments.
      enum:
        - ROLLED_OVER
        - PAID_OUT_AT_MATURITY
        - HOLD_ON_MATURITY
      type: string
    BankingTermDepositAccountV1:
      properties:
        lodgementDate:
          description: The lodgement date of the original deposit
          type: string
          format: date
        maturityAmount:
          description: >-
            Amount to be paid upon maturity. If absent it implies the amount to
            paid is variable and cannot currently be calculated
          type: string
          format: AmountString
        maturityCurrency:
          description: If absent assumes AUD
          type: string
          format: CurrencyString
        maturityDate:
          description: Maturity date for the term deposit
          type: string
          format: date
        maturityInstructions:
          $ref: '#/components/schemas/EnumBankingMaturityInstructionsV1'
      required:
        - lodgementDate
        - maturityDate
        - maturityInstructions
      type: object
    BankingAccountDetailV1:
      allOf:
        - $ref: '#/components/schemas/BankingAccountV1'
        - properties:
            accountNumber:
              description: >-
                The unmasked account number for the account. Should not be
                supplied if the account number is a PAN requiring PCI
                compliance. Is expected to be formatted as digits only with
                leading zeros included and no punctuation or spaces
              type: string
              example: '01231234'
            addresses:
              description: The addresses for the account to be used for correspondence
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressV1'
              type: array
            bsb:
              description: >-
                The unmasked BSB for the account. Is expected to be formatted as
                digits only with leading zeros included and no punctuation or
                spaces
              type: string
              example: '999999'
            bundleName:
              description: >-
                Optional field to indicate if this account is part of a bundle
                that is providing additional benefit for to the customer
              type: string
              example: Great Bundle Savings
            creditCard:
              $ref: '#/components/schemas/BankingCreditCardAccountV1'
            depositRate:
              description: >-
                current rate to calculate interest earned being applied to
                deposit balances as it stands at the time of the API call
              type: string
              format: RateString
              example: '0.02'
            depositRates:
              description: >-
                Fully described deposit rates for this account based on the
                equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductDepositRateV2'
              type: array
            features:
              description: >-
                Array of features of the account based on the equivalent
                structure in Product Reference with the following additional
                field
              items:
                allOf:
                  - $ref: '#/components/schemas/BankingProductFeatureV1'
                  - properties:
                      isActivated:
                        default: true
                        description: >-
                          True if the feature is already activated and false if
                          the feature is available for activation. Defaults to
                          true if absent. (note this is an additional field
                          appended to the feature object defined in the Product
                          Reference payload)
                        type: boolean
                    type: object
                type: object
              type: array
            fees:
              description: >-
                Fees and charges applicable to the account based on the
                equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductFeeV1'
              type: array
            lendingRate:
              description: >-
                The current rate to calculate interest payable being applied to
                lending balances as it stands at the time of the API call
              type: string
              format: RateString
              example: '0.02'
            lendingRates:
              description: >-
                Fully described deposit rates for this account based on the
                equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV2'
              type: array
            loan:
              $ref: '#/components/schemas/BankingLoanAccountV1'
            specificAccountUType:
              description: The type of structure to present account specific fields.
              enum:
                - termDeposit
                - creditCard
                - loan
              type: string
              example: loan
            termDeposit:
              items:
                $ref: '#/components/schemas/BankingTermDepositAccountV1'
              type: array
          type: object
          x-conditional:
            - termDeposit
            - creditCard
            - loan
    LinksV1:
      properties:
        self:
          description: Fully qualified link that generated the current response document
          type: string
          format: uri
      required:
        - self
      type: object
    MetaV1:
      type: object
    ResponseBankingAccountByIdV1:
      properties:
        data:
          $ref: '#/components/schemas/BankingAccountDetailV1'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    ResponseBankingAccountsBalanceByIdV1:
      properties:
        data:
          $ref: '#/components/schemas/BankingBalanceV1'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    BankingScheduledPaymentFromV1:
      description: >-
        Object containing details of the source of the payment. Currently only
        specifies an account ID but provided as an object to facilitate future
        extensibility and consistency with the to object
      properties:
        accountId:
          description: ID of the account that is the source of funds for the payment
          type: string
      required:
        - accountId
      type: object
    EnumBankingBillerCRNTypeV1:
      description: >-
        Denotes the type of CRN. FIXED_CRN A unique reference number such as a
        credit card or a fixed reference number identifying a customer's account
        that does not change with each bill. VARIABLE_CRN Biller generated
        reference number provided to the customer that is unique to each bill.
        INTELLIGENT_CRN Biller generated reference number provided to the
        customer that is unique to each bill which fixes the amount of the bill
        being paid, expiry date or both.
      enum:
        - FIXED_CRN
        - VARIABLE_CRN
        - INTELLIGENT_CRN
      type: string
    BankingBillerPayeeV1:
      properties:
        billerCode:
          description: BPAY Biller Code of the Biller
          type: string
          example: '12345'
        billerName:
          description: Name of the Biller
          type: string
          example: BPAY Electricity Co
        crn:
          description: >-
            BPAY CRN of the Biller. Where the crn contains sensitive
            information, it should be masked inline with how the Data Holder
            currently displays account identifiers in their existing online
            banking channels. If the contents of the CRN match the format of a
            Credit Card PAN or are otherwise sensitive, then it should be masked
            using the rules applicable for the MaskedPANString common type
          type: string
          example: XXXXXXXXXXXX1234
        crnType:
          $ref: '#/components/schemas/EnumBankingBillerCRNTypeV1'
      required:
        - billerCode
        - billerName
        - crnType
      type: object
      x-conditional:
        - crn
    BankingDomesticPayeeAccountV1:
      properties:
        accountName:
          description: Name of the account to pay to
          type: string
          example: Woolie Jumpers Shop
        accountNumber:
          description: Number of the account to pay to
          type: string
          example: '1234123423'
        bsb:
          description: BSB of the account to pay to
          type: string
          example: 123-123
      required:
        - accountNumber
        - bsb
      type: object
    BankingDomesticPayeeCardV1:
      properties:
        cardNumber:
          description: Name of the account to pay to
          type: string
          format: MaskedPANString
          example: XXXX-XXXX-XXXX-1234
      required:
        - cardNumber
      type: object
    BankingDomesticPayeePayIdV1:
      properties:
        identifier:
          description: The identifier of the PayID (dependent on type)
          type: string
          example: hello@biza.io
        name:
          description: The name assigned to the PayID by the owner of the PayID
          type: string
          example: Biza Pty Ltd
        type:
          description: The type of the PayID
          enum:
            - EMAIL
            - TELEPHONE
            - ABN
            - ORG_IDENTIFIER
          type: string
          example: EMAIL
      required:
        - identifier
        - type
      type: object
    BankingDomesticPayeeV1:
      properties:
        account:
          $ref: '#/components/schemas/BankingDomesticPayeeAccountV1'
        card:
          $ref: '#/components/schemas/BankingDomesticPayeeCardV1'
        payId:
          $ref: '#/components/schemas/BankingDomesticPayeePayIdV1'
        payeeAccountUType:
          description: >-
            Type of account object included. Valid values are: **account** A
            standard Australian account defined by BSB/Account Number. **card**
            A credit or charge card to pay to (note that PANs are masked).
            **payId** A PayID recognised by NPP
          enum:
            - account
            - card
            - payId
          type: string
          example: payId
      required:
        - payeeAccountUType
      type: object
      x-conditional:
        - account
        - card
        - payId
    BankingInternationalPayeeBankDetailsBankAddressV1:
      properties:
        address:
          description: Address of the recipient Bank
          type: string
          example: '100 Wiltock Place, London, GB'
        name:
          description: Name of the recipient Bank
          type: string
          example: KACME Bank
      required:
        - address
        - name
    BankingInternationalPayeeBankDetailsV1:
      properties:
        accountNumber:
          description: Account Targeted for payment
          type: string
          example: '12341234'
        bankAddress:
          $ref: >-
            #/components/schemas/BankingInternationalPayeeBankDetailsBankAddressV1
        beneficiaryBankBIC:
          description: >-
            Swift bank code.  Aligns with standard [ISO
            9362](https://www.iso.org/standard/60390.html)
          type: string
          format: SwiftBankString
          example: ACMEAUSYHOM
        chipNumber:
          description: Number for the Clearing House Interbank Payments System
          type: string
          example: '12341234'
        country:
          description: >-
            Country of the recipient institution. A valid [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            code
          type: string
          format: CountryString
          example: AUS
        fedWireNumber:
          description: Number for Fedwire payment (Federal Reserve Wire Network)
          type: string
          example: '12939281'
        legalEntityIdentifier:
          description: >-
            The legal entity identifier (LEI) for the beneficiary.  Aligns with
            [ISO 17442](https://www.iso.org/standard/59771.html)
          type: string
          format: LegalEntityString
          example: 549300TGFLH2QZV80T70
        routingNumber:
          description: International bank routing number
          type: string
          example: '18281828'
        sortCode:
          description: Sort code used for account identification in some jurisdictions
          type: string
          example: '01'
      required:
        - accountNumber
        - country
    BankingInternationalPayeeBeneficiaryDetailsV1:
      properties:
        country:
          description: >-
            Country where the beneficiary resides. A valid [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            code
          type: string
          format: CountryString
          example: AUS
        message:
          description: Response message for the payment
          type: string
          example: Payment Received
        name:
          description: Name of the beneficiary
          type: string
          example: Woolie Jumpers International
      required:
        - country
    BankingInternationalPayeeV1:
      properties:
        bankDetails:
          $ref: '#/components/schemas/BankingInternationalPayeeBankDetailsV1'
        beneficiaryDetails:
          $ref: '#/components/schemas/BankingInternationalPayeeBeneficiaryDetailsV1'
      required:
        - bankDetails
        - beneficiaryDetails
      type: object
    BankingScheduledPaymentToV1:
      description: >-
        Object containing details of the destination of the payment. Used to
        specify a variety of payment destination types
      properties:
        accountId:
          description: >-
            Present if toUType is set to accountId. Indicates that the payment
            is to another account that is accessible under the current consent
          type: string
        biller:
          $ref: '#/components/schemas/BankingBillerPayeeV1'
        domestic:
          $ref: '#/components/schemas/BankingDomesticPayeeV1'
        international:
          $ref: '#/components/schemas/BankingInternationalPayeeV1'
        payeeId:
          description: >-
            Present if toUType is set to payeeId. Indicates that the payment is
            to registered payee that can be accessed using the payee end point.
            If the Bank Payees scope has not been consented to then a payeeId
            should not be provided and the full payee details should be provided
            instead
          type: string
        toUType:
          description: >-
            The type of object provided that specifies the destination of the
            funds for the payment.
          enum:
            - accountId
            - payeeId
            - domestic
            - biller
            - international
          type: string
      required:
        - toUType
      type: object
      x-conditional:
        - accountId
        - payeeId
        - domestic
        - biller
        - international
    BankingScheduledPaymentSetV1:
      description: >-
        The set of payment amounts and destination accounts for this payment
        accommodating multi-part payments. A single entry indicates a simple
        payment with one destination account. Must have at least one entry
      properties:
        amount:
          description: >-
            The amount of the next payment if known. Mandatory unless the
            isAmountCalculated field is set to true. Must be zero or positive if
            present
          type: string
          format: AmountString
        currency:
          description: The currency for the payment. AUD assumed if not present
          type: string
          format: CurrencyString
        isAmountCalculated:
          description: >-
            Flag indicating whether the amount of the payment is calculated
            based on the context of the event. For instance a payment to reduce
            the balance of a credit card to zero. If absent then false is
            assumed
          type: boolean
        to:
          $ref: '#/components/schemas/BankingScheduledPaymentToV1'
      required:
        - to
      x-conditional:
        - amount
    BankingScheduledPaymentRecurrenceEventBasedV1:
      description: >-
        Indicates that the schedule of payments is defined according to an
        external event that cannot be predetermined. Mandatory if
        recurrenceUType is set to eventBased
      properties:
        description:
          description: >-
            Description of the event and conditions that will result in the
            payment. Expected to be formatted for display to a customer
          type: string
      required:
        - description
      type: object
    BankingScheduledPaymentIntervalV1:
      properties:
        dayInInterval:
          description: >-
            Uses an interval to define the ordinal day within the interval
            defined by the interval field on which the payment occurs. If the
            resulting duration is 0 days in length or larger than the number of
            days in the interval then the payment will occur on the last day of
            the interval. A duration of 1 day indicates the first day of the
            interval. If absent the assumed value is P1D. Formatted according to
            [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax) with components less than a day in
            length ignored. The first day of a week is considered to be Monday.
          type: string
          format: DurationString
        interval:
          description: >-
            An interval for the payment. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) 
            (excludes recurrence syntax) with components less than a day in
            length ignored. This duration defines the period between payments
            starting with nextPaymentDate
          type: string
          format: DurationString
      required:
        - interval
      type: object
    EnumBankingNonBusinessDayTreatmentV1:
      description: >-
        Enumerated field giving the treatment where a scheduled payment date is
        not a business day. If absent assumed to be ON.<br/>**AFTER** - If a
        scheduled payment date is a non-business day the payment will be made on
        the first business day after the scheduled payment date.<br/>**BEFORE**
        - If a scheduled payment date is a non-business day the payment will be
        made on the first business day before the scheduled payment
        date.<br/>**ON** - If a scheduled payment date is a non-business day the
        payment will be made on that day regardless.<br/>**ONLY** - Payments
        only occur on business days. If a scheduled payment date is a
        non-business day the payment will be ignored
      enum:
        - AFTER
        - BEFORE
        - 'ON'
        - ONLY
      default: 'ON'
      type: string
    BankingScheduledPaymentRecurrenceIntervalScheduleV1:
      description: >-
        Indicates that the schedule of payments is defined by a series of
        intervals. Mandatory if recurrenceUType is set to intervalSchedule
      properties:
        finalPaymentDate:
          description: >-
            The limit date after which no more payments should be made using
            this schedule. If both finalPaymentDate and paymentsRemaining are
            present then payments will stop according to the most constraining
            value. If neither field is present the payments will continue
            indefinitely
          type: string
          format: date
        intervals:
          description: >-
            An array of interval objects defining the payment schedule.  Each
            entry in the array is additive, in that it adds payments to the
            overall payment schedule.  If multiple intervals result in a payment
            on the same day then only one payment will be made. Must have at
            least one entry
          items:
            $ref: '#/components/schemas/BankingScheduledPaymentIntervalV1'
          type: array
        nonBusinessDayTreatment:
          $ref: '#/components/schemas/EnumBankingNonBusinessDayTreatmentV1'
        paymentsRemaining:
          description: >-
            Indicates the number of payments remaining in the schedule. If both
            finalPaymentDate and paymentsRemaining are present then payments
            will stop according to the most constraining value, If neither field
            is present the payments will continue indefinitely
          type: integer
          minimum: 1
      required:
        - intervals
      type: object
    EnumWeekDayV1:
      description: >-
        The weekDay specified. The payment will occur on the last occurrence of
        this weekday in the interval.
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
      type: string
    BankingScheduledPaymentRecurrenceLastWeekdayV1:
      description: >-
        Indicates that the schedule of payments is defined according to the last
        occurrence of a specific weekday in an interval. Mandatory if
        recurrenceUType is set to lastWeekDay
      properties:
        finalPaymentDate:
          description: >-
            The limit date after which no more payments should be made using
            this schedule. If both finalPaymentDate and paymentsRemaining are
            present then payments will stop according to the most constraining
            value. If neither field is present the payments will continue
            indefinitely
          type: string
          format: date
        interval:
          description: >-
            The interval for the payment. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax) with components less than a day in
            length ignored. This duration defines the period between payments
            starting with nextPaymentDate
          type: string
          format: DurationString
        lastWeekDay:
          $ref: '#/components/schemas/EnumWeekDayV1'
        nonBusinessDayTreatment:
          $ref: '#/components/schemas/EnumBankingNonBusinessDayTreatmentV1'
        paymentsRemaining:
          description: >-
            Indicates the number of payments remaining in the schedule. If both
            finalPaymentDate and paymentsRemaining are present then payments
            will stop according to the most constraining value. If neither field
            is present the payments will continue indefinitely
          type: integer
          minimum: 1
      required:
        - interval
        - lastWeekDay
      type: object
    BankingScheduledPaymentRecurrenceOnceOffV1:
      description: >-
        Indicates that the payment is a once off payment on a specific future
        date. Mandatory if recurrenceUType is set to onceOff
      properties:
        paymentDate:
          description: The scheduled date for the once off payment
          type: string
          format: date
      required:
        - paymentDate
      type: object
    BankingScheduledPaymentRecurrenceV1:
      description: Object containing the detail of the schedule for the payment
      properties:
        eventBased:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceEventBasedV1'
        intervalSchedule:
          $ref: >-
            #/components/schemas/BankingScheduledPaymentRecurrenceIntervalScheduleV1
        lastWeekDay:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceLastWeekdayV1'
        nextPaymentDate:
          description: The date of the next payment under the recurrence schedule
          type: string
          format: date
        onceOff:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceOnceOffV1'
        recurrenceUType:
          description: The type of recurrence used to define the schedule
          enum:
            - onceOff
            - intervalSchedule
            - lastWeekDay
            - eventBased
          type: string
      required:
        - recurrenceUType
      type: object
      x-conditional:
        - onceOff
        - intervalSchedule
        - lastWeekDay
        - eventBased
    BankingScheduledPaymentV1:
      properties:
        from:
          $ref: '#/components/schemas/BankingScheduledPaymentFromV1'
        nickname:
          description: The short display name of the payee as provided by the customer
          type: string
        payeeReference:
          description: >-
            The reference for the transaction that will be provided by the
            originating institution. Empty string if no data provided
          type: string
        payerReference:
          description: >-
            The reference for the transaction that will be used by the
            originating institution for the purposes of constructing a statement
            narrative on the payer’s account. Empty string if no data provided
          type: string
        paymentSet:
          items:
            $ref: '#/components/schemas/BankingScheduledPaymentSetV1'
          type: array
        recurrence:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceV1'
        scheduledPaymentId:
          description: >-
            A unique ID of the scheduled payment adhering to the standards for
            ID permanence
          type: string
          format: ASCIIString
        status:
          description: >-
            Indicates whether the schedule is currently active. The value SKIP
            is equivalent to ACTIVE except that the customer has requested the
            next normal occurrence to be skipped.
          enum:
            - ACTIVE
            - SKIP
            - INACTIVE
          type: string
      required:
        - from
        - payeeReference
        - payerReference
        - paymentSet
        - recurrence
        - scheduledPaymentId
        - status
      type: object
    ResponseBankingScheduledPaymentsListV1:
      properties:
        data:
          type: object
          properties:
            scheduledPayments:
              description: The list of scheduled payments to return
              items:
                $ref: '#/components/schemas/BankingScheduledPaymentV1'
              type: array
          required:
            - scheduledPayments
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    EnumBankingTransactionStatusV1:
      description: >-
        Status of the transaction whether pending or posted. Note that there is
        currently no provision in the standards to guarantee the ability to
        correlate a pending transaction with an associated posted transaction
      enum:
        - PENDING
        - POSTED
      type: string
    EnumBankingTransactionTypeV1:
      description: The type of the transaction
      enum:
        - FEE
        - INTEREST_CHARGED
        - INTEREST_PAID
        - TRANSFER_OUTGOING
        - TRANSFER_INCOMING
        - PAYMENT
        - DIRECT_DEBIT
        - OTHER
      type: string
    BankingTransactionV1:
      properties:
        accountId:
          description: ID of the account for which transactions are provided
          type: string
        amount:
          description: >-
            The value of the transaction. Negative values mean money was
            outgoing from the account
          type: string
          format: AmountString
        apcaNumber:
          description: >-
            6 Digit APCA number for the initiating institution. The field is
            fixed-width and padded with leading zeros if applicable.
          type: string
        billerCode:
          description: BPAY Biller Code for the transaction (if available)
          type: string
        billerName:
          description: Name of the BPAY biller for the transaction (if available)
          type: string
        crn:
          description: BPAY CRN for the transaction (if available)
          type: string
        currency:
          description: The currency for the transaction amount. AUD assumed if not present
          type: string
          format: CurrencyString
        description:
          description: The transaction description as applied by the financial institution
          type: string
        executionDateTime:
          description: >-
            The time the transaction was executed by the originating customer,
            if available
          type: string
          format: date-time
        isDetailAvailable:
          description: >-
            True if extended information is available using the transaction
            detail end point. False if extended data is not available
          type: boolean
        merchantCategoryCode:
          description: >-
            The merchant category code (or MCC) for an outgoing payment to a
            merchant
          type: string
        merchantName:
          description: Name of the merchant for an outgoing payment to a merchant
          type: string
        postingDateTime:
          description: >-
            The time the transaction was posted. This field is Mandatory if the
            transaction has status POSTED.  This is the time that appears on a
            standard statement
          type: string
          format: date-time
        reference:
          description: >-
            The reference for the transaction provided by the originating
            institution. Empty string if no data provided
          type: string
        status:
          $ref: '#/components/schemas/EnumBankingTransactionStatusV1'
        transactionId:
          description: >-
            A unique ID of the transaction adhering to the standards for ID
            permanence.  This is mandatory (through hashing if necessary) unless
            there are specific and justifiable technical reasons why a
            transaction cannot be uniquely identified for a particular account
            type
          type: string
        type:
          $ref: '#/components/schemas/EnumBankingTransactionTypeV1'
        valueDateTime:
          description: >-
            Date and time at which assets become available to the account owner
            in case of a credit entry, or cease to be available to the account
            owner in case of a debit transaction entry
          type: string
          format: date-time
      required:
        - accountId
        - amount
        - description
        - isDetailAvailable
        - reference
        - status
        - type
      type: object
      x-conditional:
        - transactionId
        - postingDateTime
    ResponseBankingTransactionListV1:
      properties:
        data:
          type: object
          properties:
            transactions:
              items:
                $ref: '#/components/schemas/BankingTransactionV1'
              type: array
          required:
            - transactions
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    BankingTransactionDetailExtendedDataX2P101PayloadV1:
      properties:
        endToEndId:
          description: An end to end ID for the payment created at initiation
          type: string
        extendedDescription:
          description: >-
            An extended string description. Only present if specified by the
            extensionUType field
          type: string
        purposeCode:
          description: >-
            Purpose of the payment.  Format is defined by NPP standards for the
            x2p1.01 overlay service
          type: string
      required:
        - extendedDescription
    BankingTransactionDetailExtendedDataV1:
      properties:
        extensionUType:
          description: >-
            Optional extended data provided specific to transaction originated
            via NPP
          enum:
            - x2p101Payload
          type: string
        payee:
          description: >-
            Label of the target PayID.  Mandatory for an outbound payment. The
            name assigned to the BSB/Account Number or PayID (by the owner of
            the PayID)
          type: string
        payer:
          description: Label of the originating payer. Mandatory for inbound payment
          type: string
        service:
          description: >-
            Identifier of the applicable overlay service. Valid values are:
            X2P1.01
          enum:
            - X2P1.01
          type: string
        x2p101Payload:
          $ref: >-
            #/components/schemas/BankingTransactionDetailExtendedDataX2P101PayloadV1
      required:
        - service
    BankingTransactionDetailV1:
      allOf:
        - $ref: '#/components/schemas/BankingTransactionV1'
        - properties:
            extendedData:
              $ref: '#/components/schemas/BankingTransactionDetailExtendedDataV1'
          required:
            - extendedData
          type: object
    ResponseBankingTransactionByIdV1:
      properties:
        data:
          $ref: '#/components/schemas/BankingTransactionDetailV1'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    EnumBankingPayeeTypeV1:
      description: >-
        The type of payee. DOMESTIC means a registered payee for domestic
        payments including NPP. INTERNATIONAL means a registered payee for
        international payments. BILLER means a registered payee for BPAY
      enum:
        - DOMESTIC
        - INTERNATIONAL
        - BILLER
      type: string
      example: BILLER
    BankingPayeeV1:
      properties:
        creationDate:
          description: The date the payee was created by the customer
          type: string
          format: date
        description:
          description: A description of the payee provided by the customer
          type: string
        nickname:
          description: >-
            The short display name of the payee as provided by the customer.
            Where a customer has not provided a nickname, a display name derived
            by the bank for the payee consistent with existing digital banking
            channels.
          type: string
        payeeId:
          description: ID of the payee adhering to the rules of ID permanence
          type: string
        type:
          $ref: '#/components/schemas/EnumBankingPayeeTypeV1'
      required:
        - nickname
        - payeeId
        - type
      type: object
    ResponseBankingPayeeListV1:
      properties:
        data:
          type: object
          properties:
            payees:
              description: The list of payees returned
              items:
                $ref: '#/components/schemas/BankingPayeeV1'
              type: array
          required:
            - payees
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    BankingPayeeDetailV1:
      allOf:
        - $ref: '#/components/schemas/BankingPayeeV1'
        - properties:
            biller:
              $ref: '#/components/schemas/BankingBillerPayeeV1'
            domestic:
              $ref: '#/components/schemas/BankingDomesticPayeeV1'
            international:
              $ref: '#/components/schemas/BankingInternationalPayeeV1'
            payeeUType:
              description: Type of object included that describes the payee in detail
              enum:
                - domestic
                - biller
                - international
              type: string
          required:
            - payeeUType
          type: object
          x-conditional:
            - domestic
            - biller
            - international
    ResponseBankingPayeeByIdV1:
      properties:
        data:
          $ref: '#/components/schemas/BankingPayeeDetailV1'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    BankingProductAdditionalInformationV1:
      description: Object that contains links to additional information on specific topics
      properties:
        bundleUri:
          description: Description of a bundle that this product can be part of
          type: string
          format: uri
        eligibilityUri:
          description: Eligibility rules and criteria for the product
          type: string
          format: uri
        feesAndPricingUri:
          description: >-
            Description of fees, pricing, discounts, exemptions and bonuses for
            the product
          type: string
          format: uri
        overviewUri:
          description: General overview of the product
          type: string
          format: uri
        termsUri:
          description: Terms and conditions for the product
          type: string
          format: uri
    BankingProductV1:
      properties:
        additionalInformation:
          $ref: '#/components/schemas/BankingProductAdditionalInformationV1'
        applicationUri:
          description: >-
            A link to an application web page where this product can be applied
            for.
          type: string
          format: uri
        brand:
          description: >-
            A label of the brand for the product. Able to be used for filtering.
            For data holders with single brands this value is still required
          type: string
        brandName:
          description: An optional display name of the brand
          type: string
        description:
          description: A description of the product
          type: string
        effectiveFrom:
          description: >-
            The date and time from which this product is effective (ie. is
            available for origination).  Used to enable the articulation of
            products to the regime before they are available for customers to
            originate
          type: string
          format: date-time
        effectiveTo:
          description: >-
            The date and time at which this product will be retired and will no
            longer be offered.  Used to enable the managed deprecation of
            products
          type: string
          format: date-time
        isTailored:
          description: >-
            Indicates whether the product is specifically tailored to a
            circumstance.  In this case fees and prices are significantly
            negotiated depending on context. While all products are open to a
            degree of tailoring this flag indicates that tailoring is expected
            and thus that the provision of specific fees and rates is not
            applicable
          type: boolean
        lastUpdated:
          description: >-
            The last date and time that the information for this product was
            changed (or the creation date for the product if it has never been
            altered)
          type: string
          format: date-time
        name:
          description: The display name of the product
          type: string
        productCategory:
          $ref: '#/components/schemas/EnumBankingProductCategoryV1'
        productId:
          description: >-
            A data holder specific unique identifier for this product. This
            identifier must be unique to a product but does not otherwise need
            to adhere to ID permanence guidelines.
          type: string
      required:
        - brand
        - description
        - isTailored
        - lastUpdated
        - name
        - productCategory
        - productId
      type: object
    ResponseBankingProductListV1:
      properties:
        data:
          type: object
          properties:
            products:
              description: >-
                The list of products returned.  If the filter results in an
                empty set then this array may have no records
              items:
                $ref: '#/components/schemas/BankingProductV1'
              type: array
          required:
            - products
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    BankingProductCardArtV1:
      properties:
        imageUri:
          description: >-
            URI reference to a PNG, JPG or GIF image with proportions defined by
            ISO 7810 ID-1 and width no greater than 512 pixels. The URI
            reference may be a link or url-encoded data URI RFC 2397.
          type: string
          format: uri
        title:
          description: Display label for the specific image
          type: string
          example: Customise your card and look snazzy
      required:
        - imageUri
    BankingProductV2:
      properties:
        additionalInformation:
          $ref: '#/components/schemas/BankingProductAdditionalInformationV1'
        applicationUri:
          description: >-
            A link to an application web page where this product can be applied
            for.
          type: string
          format: uri
        brand:
          description: >-
            A label of the brand for the product. Able to be used for filtering.
            For data holders with single brands this value is still required
          type: string
        brandName:
          description: An optional display name of the brand
          type: string
        cardArt:
          description: An array of card art images
          items:
            $ref: '#/components/schemas/BankingProductCardArtV1'
          type: array
        description:
          description: A description of the product
          type: string
        effectiveFrom:
          description: >-
            The date and time from which this product is effective (ie. is
            available for origination).  Used to enable the articulation of
            products to the regime before they are available for customers to
            originate
          type: string
          format: date-time
        effectiveTo:
          description: >-
            The date and time at which this product will be retired and will no
            longer be offered.  Used to enable the managed deprecation of
            products
          type: string
          format: date-time
        isTailored:
          description: >-
            Indicates whether the product is specifically tailored to a
            circumstance.  In this case fees and prices are significantly
            negotiated depending on context. While all products are open to a
            degree of tailoring this flag indicates that tailoring is expected
            and thus that the provision of specific fees and rates is not
            applicable
          type: boolean
        lastUpdated:
          description: >-
            The last date and time that the information for this product was
            changed (or the creation date for the product if it has never been
            altered)
          type: string
          format: date-time
        name:
          description: The display name of the product
          type: string
        productCategory:
          $ref: '#/components/schemas/EnumBankingProductCategoryV1'
        productId:
          description: >-
            A data holder specific unique identifier for this product. This
            identifier must be unique to a product but does not otherwise need
            to adhere to ID permanence guidelines.
          type: string
      required:
        - brand
        - description
        - isTailored
        - lastUpdated
        - name
        - productCategory
        - productId
      type: object
    ResponseBankingProductListV2:
      properties:
        data:
          type: object
          properties:
            products:
              description: >-
                The list of products returned.  If the filter results in an
                empty set then this array may have no records
              items:
                $ref: '#/components/schemas/BankingProductV2'
              type: array
          required:
            - products
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    BankingProductV3:
      properties:
        additionalInformation:
          $ref: '#/components/schemas/BankingProductAdditionalInformationV1'
        applicationUri:
          description: >-
            A link to an application web page where this product can be applied
            for.
          type: string
          format: uri
        brand:
          description: >-
            A label of the brand for the product. Able to be used for filtering.
            For data holders with single brands this value is still required
          type: string
        brandName:
          description: An optional display name of the brand
          type: string
        cardArt:
          description: An array of card art images
          items:
            $ref: '#/components/schemas/BankingProductCardArtV1'
          type: array
        description:
          description: A description of the product
          type: string
        effectiveFrom:
          description: >-
            The date and time from which this product is effective (ie. is
            available for origination).  Used to enable the articulation of
            products to the regime before they are available for customers to
            originate
          type: string
          format: date-time
        effectiveTo:
          description: >-
            The date and time at which this product will be retired and will no
            longer be offered.  Used to enable the managed deprecation of
            products
          type: string
          format: date-time
        isTailored:
          description: >-
            Indicates whether the product is specifically tailored to a
            circumstance.  In this case fees and prices are significantly
            negotiated depending on context. While all products are open to a
            degree of tailoring this flag indicates that tailoring is expected
            and thus that the provision of specific fees and rates is not
            applicable
          type: boolean
        lastUpdated:
          description: >-
            The last date and time that the information for this product was
            changed (or the creation date for the product if it has never been
            altered)
          type: string
          format: date-time
        name:
          description: The display name of the product
          type: string
        productCategory:
          $ref: '#/components/schemas/EnumBankingProductCategoryV1'
        productId:
          description: >-
            A data holder specific unique identifier for this product. This
            identifier must be unique to a product but does not otherwise need
            to adhere to ID permanence guidelines.
          type: string
      required:
        - brand
        - description
        - isTailored
        - lastUpdated
        - name
        - productCategory
        - productId
      type: object
    ResponseBankingProductListV3:
      properties:
        data:
          type: object
          properties:
            products:
              description: >-
                The list of products returned.  If the filter results in an
                empty set then this array may have no records
              items:
                $ref: '#/components/schemas/BankingProductV3'
              type: array
          required:
            - products
        links:
          $ref: '#/components/schemas/LinksPaginatedV1'
        meta:
          $ref: '#/components/schemas/MetaPaginatedV1'
      required:
        - data
        - links
        - meta
      type: object
    BankingProductBundleV1:
      properties:
        additionalInfo:
          description: Display text providing more information on the bundle
          type: string
          example: A great bundle with all the extras
        additionalInfoUri:
          description: >-
            Link to a web page with more information on the bundle criteria and
            benefits
          type: string
          format: uri
        description:
          description: Description of the bundle
          type: string
          example: Provides a savings account and loan
        name:
          description: Name of the bundle
          type: string
          example: ACME Super Bundle
        productIds:
          description: >-
            Array of product IDs for products included in the bundle that are
            available via the product end points.  Note that this array is not
            intended to represent a comprehensive model of the products included
            in the bundle and some products available for the bundle may not be
            available via the product reference end points
          items:
            type: string
          type: array
      required:
        - description
        - name
      type: object
    EnumBankingProductConstraintTypeV1:
      description: >

        Each Product or Account has a set of Constraints. These are explained in
        a table as follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        MIN_BALANCE | A minimum balance is required for the product | The
        minimum balance in AmountString format

        MAX_BALANCE | A maximum balance is required for the product | The
        maximum balance in AmountString format

        OPENING_BALANCE | An opening balance is required for the product | The
        minimum opening balance in AmountString format

        MAX_LIMIT | A maximum limit exists (such as a maximum loan balance
        denoting the borrowable amount or maximum allowable credit limit) | The
        maximum limit in AmountString format

        MIN_LIMIT | A minimum limit exists (such as a minimum loan balance
        denoting the borrowable amount or minimum credit limit) | The minimum
        limit in AmountString format
      enum:
        - MIN_BALANCE
        - MAX_BALANCE
        - OPENING_BALANCE
        - MAX_LIMIT
        - MIN_LIMIT
      type: string
      example: MIN_BALANCE
    BankingProductConstraintV1:
      properties:
        additionalInfo:
          description: Display text providing more information the constraint
          type: string
          example: Some information about the constraint
        additionalInfoUri:
          description: Link to a web page with more information on the constraint
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [constraintType](#tocSproductconstrainttypedoc) specified.  Whether
            mandatory or not is dependent on the value of
            [constraintType](#tocSproductconstrainttypedoc)
          type: string
          example: 'Type specific value, see documentation'
        constraintType:
          $ref: '#/components/schemas/EnumBankingProductConstraintTypeV1'
      required:
        - constraintType
      type: object
      x-conditional:
        - additionalValue
    EnumBankingDepositRateTypeV1:
      description: >

        The type of rate (base, bonus, etc). These are explained in a table as
        follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        FIXED | Fixed rate for a period of time | The period of time fixed.
        Formatted according to ISO 8601 Durations

        BONUS | A bonus rate available by meeting a specific criteria | A
        description of the criteria to obtain the bonus

        BUNDLE_BONUS | A bonus rate obtained by originating a bundle instead of
        a standalone product | The name of the bundle

        VARIABLE | A variable base rate for the product | NA

        INTRODUCTORY | An introductory bonus that will expire after a set period
        | The period of time for the introductory rate. Formatted according to
        ISO 8601 Durations

        FLOATING | A floating rate is relatively fixed but still adjusts under
        specific circumstances | Details of the float parameters

        MARKET_LINKED | A rate that is linked to a specific market, commodity or
        asset class | Details of the market linkage
      enum:
        - FIXED
        - BONUS
        - BUNDLE_BONUS
        - VARIABLE
        - INTRODUCTORY
        - FLOATING
        - MARKET_LINKED
      type: string
      example: FIXED
    BankingProductRateSubTierV1:
      description: Defines the criteria and conditions for which a rate applies
      properties:
        name:
          description: A display name for the sub tier
          type: string
        unitOfMeasure:
          $ref: '#/components/schemas/EnumUnitOfMeasureV1'
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateConditionV1'
        maximumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the upper bound of
            the tier or band. For a tier with a discrete value (as opposed to a
            range of values e.g. 1 month) this must be the same as
            tierValueMinimum. Where this is the same as the tierValueMinimum
            value of the next-higher tier the referenced tier should be
            exclusive of this value. For example a term deposit of 2 months
            falls into the upper tier of the following tiers: (1 – 2 months, 2 –
            3 months). If absent the tier's range has no upper bound.
          type: number
        minimumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the lower bound of
            the tier. The tier should be inclusive of this value
          type: number
        rateApplicationMethod:
          $ref: '#/components/schemas/EnumBankingRateApplicationMethodV1'
      required:
        - minimumValue
        - name
        - unitOfMeasure
      type: object
    BankingProductRateTierV1:
      description: Defines the criteria and conditions for which a rate applies
      properties:
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateConditionV1'
        maximumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the upper bound of
            the tier or band. For a tier with a discrete value (as opposed to a
            range of values e.g. 1 month) this must be the same as
            tierValueMinimum. Where this is the same as the tierValueMinimum
            value of the next-higher tier the referenced tier should be
            exclusive of this value. For example a term deposit of 2 months
            falls into the upper tier of the following tiers: (1 – 2 months, 2 –
            3 months). If absent the tier's range has no upper bound.
          type: number
        minimumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the lower bound of
            the tier. The tier should be inclusive of this value
          type: number
        name:
          description: A display name for the tier
          type: string
        rateApplicationMethod:
          $ref: '#/components/schemas/EnumBankingRateApplicationMethodV1'
        unitOfMeasure:
          $ref: '#/components/schemas/EnumUnitOfMeasureV1'
        subTier:
          description: >-
            Defines the sub-tier criteria and conditions for which a rate
            applies
          items:
            $ref: '#/components/schemas/BankingProductRateSubTierV1'
          type: array
      required:
        - minimumValue
        - name
        - unitOfMeasure
      type: object
    BankingProductDepositRateV1:
      properties:
        additionalInfo:
          description: Display text providing more information on the rate
          type: string
          example: A great deposit rate
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [depositRateType](#tocSproductdepositratetypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [depositRateType](#tocSproductdepositratetypedoc)
          type: string
          example: 'Type specific value, see documentation'
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P30D
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P1D
        depositRateType:
          $ref: '#/components/schemas/EnumBankingDepositRateTypeV1'
        rate:
          description: The rate to be applied
          type: string
          format: RateString
          example: '0.012'
        tiers:
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV1'
          type: array
      required:
        - depositRateType
        - rate
      type: object
      x-conditional:
        - additionalValue
    EnumBankingProductEligibilityTypeV1:
      description: '$ref: EnumBankingProductEligibilityTypeV1.md'
      enum:
        - BUSINESS
        - PENSION_RECIPIENT
        - MIN_AGE
        - MAX_AGE
        - MIN_INCOME
        - MIN_TURNOVER
        - STAFF
        - STUDENT
        - EMPLOYMENT_STATUS
        - RESIDENCY_STATUS
        - NATURAL_PERSON
        - OTHER
      type: string
      example: MIN_TURNOVER
    BankingProductEligibilityV1:
      properties:
        additionalInfo:
          description: >-
            Display text providing more information on the
            [eligibility](#tocSproducteligibilitytypedoc) criteria. Mandatory if
            the field is set to OTHER
          type: string
          example: Eligibility Criteria
        additionalInfoUri:
          description: >-
            Link to a web page with more information on this eligibility
            criteria
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [eligibilityType](#tocSproducteligibilitytypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [eligibilityType](#tocSproducteligibilitytypedoc)
          type: string
          example: 'Type dependent value, see docs'
        eligibilityType:
          $ref: '#/components/schemas/EnumBankingProductEligibilityTypeV1'
      required:
        - eligibilityType
      type: object
      x-conditional:
        - additionalValue
        - additionalInfo
    BankingProductLendingRateV1:
      properties:
        additionalInfo:
          description: Display text providing more information on the rate.
          type: string
          example: Lending Rate Information
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [lendingRateType](#tocSproductlendingratetypedoc)
          type: string
          example: 'Type specific value, see docs'
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P1D
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P30D
        comparisonRate:
          description: A comparison rate equivalent for this rate
          type: string
          format: RateString
          example: '0.002'
        interestPaymentDue:
          $ref: '#/components/schemas/EnumBankingInterestPaymentDueV1'
        lendingRateType:
          $ref: '#/components/schemas/EnumBankingLendingRateTypeV1'
        loanPurpose:
          $ref: '#/components/schemas/EnumBankingLoanPurposeV1'
        rate:
          description: The rate to be applied
          type: string
          format: RateString
          example: '0.0023'
        repaymentType:
          $ref: '#/components/schemas/EnumBankingRepaymentTypeV1'
        tiers:
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV1'
          type: array
      required:
        - lendingRateType
        - rate
      type: object
      x-conditional:
        - additionalValue
    BankingProductDetailV1:
      allOf:
        - $ref: '#/components/schemas/BankingProductV1'
        - properties:
            bundles:
              description: >-
                An array of bundles that this product participates in.  Each
                bundle is described by free form information but also by a list
                of product IDs of the other products that are included in the
                bundle.  It is assumed that the current product is included in
                the bundle also
              items:
                $ref: '#/components/schemas/BankingProductBundleV1'
              type: array
            constraints:
              description: >-
                Constraints on the application for or operation of the product
                such as minimum balances or limit thresholds
              items:
                $ref: '#/components/schemas/BankingProductConstraintV1'
              type: array
            depositRates:
              description: Interest rates available for deposits
              items:
                $ref: '#/components/schemas/BankingProductDepositRateV1'
              type: array
            eligibility:
              description: Eligibility criteria for the product
              items:
                $ref: '#/components/schemas/BankingProductEligibilityV1'
              type: array
            features:
              description: Array of features available for the product
              items:
                $ref: '#/components/schemas/BankingProductFeatureV1'
              type: array
            fees:
              description: Fees applicable for the product
              items:
                $ref: '#/components/schemas/BankingProductFeeV1'
              type: array
            lendingRates:
              description: Interest rates charged against lending balances
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV1'
              type: array
          type: object
    ResponseBankingProductByIdV1:
      properties:
        data:
          $ref: '#/components/schemas/BankingProductDetailV1'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    BankingProductDetailV2:
      allOf:
        - $ref: '#/components/schemas/BankingProductV2'
        - properties:
            bundles:
              description: >-
                An array of bundles that this product participates in.  Each
                bundle is described by free form information but also by a list
                of product IDs of the other products that are included in the
                bundle.  It is assumed that the current product is included in
                the bundle also
              items:
                $ref: '#/components/schemas/BankingProductBundleV1'
              type: array
            constraints:
              description: >-
                Constraints on the application for or operation of the product
                such as minimum balances or limit thresholds
              items:
                $ref: '#/components/schemas/BankingProductConstraintV1'
              type: array
            depositRates:
              description: Interest rates available for deposits
              items:
                $ref: '#/components/schemas/BankingProductDepositRateV1'
              type: array
            eligibility:
              description: Eligibility criteria for the product
              items:
                $ref: '#/components/schemas/BankingProductEligibilityV1'
              type: array
            features:
              description: Array of features available for the product
              items:
                $ref: '#/components/schemas/BankingProductFeatureV1'
              type: array
            fees:
              description: Fees applicable for the product
              items:
                $ref: '#/components/schemas/BankingProductFeeV1'
              type: array
            lendingRates:
              description: Interest rates charged against lending balances
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV2'
              type: array
          type: object
    ResponseBankingProductByIdV2:
      properties:
        data:
          $ref: '#/components/schemas/BankingProductDetailV2'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    EnumBankingProductFeeTypeV2:
      description: >

        Each Product or Account has a set of Fee Types. These are explained in a
        table as follows:


        | Value | Description | Use of `additionalValue` Field

        |-------|-------------|-------------------------------|

        PERIODIC | A periodic fee such as a monthly account servicing fee | The
        period of charge. Formatted according to ISO 8601 Durations

        TRANSACTION | A fee associated with any transaction (incorporates
        WITHDRAWAL, DEPOSIT, PAYMENT and PURCHASE) | NA

        WITHDRAWAL | A fee associated with making a withdrawal | NA

        DEPOSIT | A fee associated with making a deposit | NA

        PAYMENT | A fee associated with making a payment | NA

        PURCHASE | A fee associated with making a purchase at a merchant | NA

        EVENT | A fee in relation to a particular event (e.g. NA ordering a new
        card, viewing a balance or stopping a cheque) | NA

        UPFRONT | A fee paid at the beginning of the product NA lifecycle, such
        as an establishment fee, loyalty program fee or application fee | NA

        EXIT | A fee for closing the product | NA

        VARIABLE | An at-cost fee that is relevant to a customer's circumstances
        where the amount or rate may not be known until negotiated with the
        customer | NA
      enum:
        - PERIODIC
        - TRANSACTION
        - WITHDRAWAL
        - DEPOSIT
        - PAYMENT
        - PURCHASE
        - EVENT
        - UPFRONT
        - EXIT
        - VARIABLE
      type: string
      example: EXIT
    BankingProductFeeV2:
      properties:
        accrualFrequency:
          description: >-
            The indicative frequency with which the fee is calculated on the
            account. Only applies if balanceRate or accruedRate is also present.
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
          example: P1D
        accruedRate:
          description: >-
            A fee rate calculated based on a proportion of the calculated
            interest accrued on the account. One of amount, balanceRate,
            transactionRate and accruedRate is mandatory unless the feeType is
            `VARIABLE`
          type: string
          format: RateString
          example: '0.002'
        additionalInfo:
          description: Display text providing more information on the fee
          type: string
          example: Additional Fee Information
        additionalInfoUri:
          description: Link to a web page with more information on this fee
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [feeType](#tocSproductfeetypedoc) specified. Whether mandatory or
            not is dependent on the value of [feeType](#tocSproductfeetypedoc)
          type: string
          example: 'Type specific value, see docs'
        amount:
          description: >-
            The amount charged for the fee. One of amount, balanceRate,
            transactionRate and accruedRate is mandatory unless the feeType is
            `VARIABLE`
          type: string
          format: AmountString
          example: '10.01'
        balanceRate:
          description: >-
            A fee rate calculated based on a proportion of the balance. One of
            amount, balanceRate, transactionRate and accruedRate is mandatory
            unless the feeType is `VARIABLE`
          type: string
          format: RateString
          example: '0.0023'
        currency:
          description: The currency the fee will be charged in. Assumes AUD if absent
          type: string
          format: CurrencyString
          example: AUD
        discounts:
          description: An optional list of discounts to this fee that may be available
          items:
            $ref: '#/components/schemas/BankingProductDiscountV1'
          type: array
        feeType:
          $ref: '#/components/schemas/EnumBankingProductFeeTypeV2'
        name:
          description: Name of the fee
          type: string
          example: Fee Name
        transactionRate:
          description: >-
            A fee rate calculated based on a proportion of a transaction. One of
            amount, balanceRate, transactionRate and accruedRate is mandatory
            unless the feeType is `VARIABLE`
          type: string
          format: RateString
          example: '0.0023'
      required:
        - feeType
        - name
      type: object
      x-conditional:
        - additionalValue
        - amount
        - balanceRate
        - transactionRate
        - accruedRate
    BankingProductRateTierV3:
      description: Defines the criteria and conditions for which a rate applies
      properties:
        additionalInfo:
          description: Display text providing more information on the rate tier.
          type: string
        additionalInfoUri:
          description: Link to a web page with more information on this rate tier
          type: string
          format: uri
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateConditionV1'
        maximumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the upper bound of
            the tier or band. For a tier with a discrete value (as opposed to a
            range of values e.g. 1 month) this must be the same as
            tierValueMinimum. Where this is the same as the tierValueMinimum
            value of the next-higher tier the referenced tier should be
            exclusive of this value. For example a term deposit of 2 months
            falls into the upper tier of the following tiers: (1 – 2 months, 2 –
            3 months). If absent the tier's range has no upper bound.
          type: number
        minimumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the lower bound of
            the tier. The tier should be inclusive of this value
          type: number
        name:
          description: A display name for the tier
          type: string
        rateApplicationMethod:
          $ref: '#/components/schemas/EnumBankingRateApplicationMethodV1'
        unitOfMeasure:
          $ref: '#/components/schemas/EnumUnitOfMeasureV1'
      required:
        - minimumValue
        - name
        - unitOfMeasure
      type: object
    BankingProductLendingRateV3:
      properties:
        additionalInfo:
          description: Display text providing more information on the rate.
          type: string
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          format: uri
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether
            mandatory or not is dependent on the value of
            [lendingRateType](#tocSproductlendingratetypedoc)
          type: string
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
        comparisonRate:
          description: A comparison rate equivalent for this rate
          type: string
          format: RateString
        interestPaymentDue:
          $ref: '#/components/schemas/EnumBankingInterestPaymentDueV1'
        lendingRateType:
          $ref: '#/components/schemas/EnumBankingLendingRateTypeV1'
        loanPurpose:
          $ref: '#/components/schemas/EnumBankingLoanPurposeV1'
        rate:
          description: The rate to be applied
          type: string
          format: RateString
        repaymentType:
          $ref: '#/components/schemas/EnumBankingRepaymentTypeV1'
        tiers:
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
          type: array
      required:
        - lendingRateType
        - rate
      type: object
      x-conditional:
        - additionalValue
    BankingProductDetailV3:
      allOf:
        - $ref: '#/components/schemas/BankingProductV3'
        - properties:
            bundles:
              description: >-
                An array of bundles that this product participates in.  Each
                bundle is described by free form information but also by a list
                of product IDs of the other products that are included in the
                bundle.  It is assumed that the current product is included in
                the bundle also
              items:
                $ref: '#/components/schemas/BankingProductBundleV1'
              type: array
            constraints:
              description: >-
                Constraints on the application for or operation of the product
                such as minimum balances or limit thresholds
              items:
                $ref: '#/components/schemas/BankingProductConstraintV1'
              type: array
            depositRates:
              description: Interest rates available for deposits
              items:
                $ref: '#/components/schemas/BankingProductDepositRateV2'
              type: array
            eligibility:
              description: Eligibility criteria for the product
              items:
                $ref: '#/components/schemas/BankingProductEligibilityV1'
              type: array
            features:
              description: Array of features available for the product
              items:
                $ref: '#/components/schemas/BankingProductFeatureV1'
              type: array
            fees:
              description: Fees applicable for the product
              items:
                $ref: '#/components/schemas/BankingProductFeeV2'
              type: array
            lendingRates:
              description: Interest rates charged against lending balances
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV3'
              type: array
          type: object
    ResponseBankingProductByIdV3:
      properties:
        data:
          $ref: '#/components/schemas/BankingProductDetailV3'
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    EnumCommonIndustryCodeVersionV1:
      description: >-
        The applicable ANZSIC release version of the industry code provided.
        Should only be supplied if industryCode is also supplied. If
        industryCode is supplied but industryCodeVersion is absent, default is
        ANZSIC_1292.0_2006_V2.0
      enum:
        - ANZSIC_1292.0_2006_V2.0
        - ANZSIC_1292.0_2006_V1.0
      type: string
      default: ANZSIC_1292.0_2006_V2.0
    EnumCommonOrganisationTypeV1:
      description: Legal organisation type
      enum:
        - SOLE_TRADER
        - COMPANY
        - PARTNERSHIP
        - TRUST
        - GOVERNMENT_ENTITY
        - OTHER
      type: string
    CommonOrganisationV1:
      properties:
        abn:
          description: Australian Business Number for the organisation
          type: string
        acn:
          description: >-
            Australian Company Number for the organisation. Required only if an
            ACN is applicable for the organisation type
          type: string
        agentFirstName:
          description: >-
            The first name of the individual providing access on behalf of the
            organisation. For people with single names this field need not be
            present.  The single name should be in the lastName field
          type: string
        agentLastName:
          description: >-
            The last name of the individual providing access on behalf of the
            organisation. For people with single names the single name should be
            in this field
          type: string
        agentRole:
          description: >-
            The role of the individual identified as the agent who is providing
            authorisation.  Expected to be used for display. Default to
            Unspecified if the role is not known
          type: string
        businessName:
          description: Name of the organisation
          type: string
        establishmentDate:
          description: The date the organisation described was established
          type: string
          format: date
        industryCode:
          description: >-
            A valid ANZSIC code for the organisation. If the industry code held
            by the data holder is not one of the supported ANZSIC versions, then
            it must not be supplied.
          type: string
        industryCodeVersion:
          $ref: '#/components/schemas/EnumCommonIndustryCodeVersionV1'
        isACNCRegistered:
          description: >-
            True if registered with the ACNC.  False if not. Absent or null if
            not confirmed.
          type: boolean
        lastUpdateTime:
          description: >-
            The date and time that this record was last updated by the customer.
            If no update has occurred then this date should reflect the initial
            creation date for the data
          type: string
          format: date-time
        legalName:
          description: 'Legal name, if different to the business name'
          type: string
        organisationType:
          $ref: '#/components/schemas/EnumCommonOrganisationTypeV1'
        registeredCountry:
          description: >-
            Enumeration with values from [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            codes.  Assumed to be AUS if absent
          type: string
          format: CountryString
        shortName:
          description: 'Short name used for communication, if different to the business name'
          type: string
      required:
        - agentLastName
        - agentRole
        - businessName
        - organisationType
      type: object
    EnumCommonOccupationCodeVersionV1:
      description: >-
        The applicable ANZSCO release version of the occupation code provided.
        Mandatory if an occupationCode is supplied. If occupationCode is
        supplied but occupationCodeVersion is absent, default is
        ANZSCO_1220.0_2013_V1.2
      enum:
        - ANZSCO_1220.0_2013_V1.3
        - ANZSCO_1220.0_2013_V1.2
        - ANZSCO_1220.0_2006_V1.1
        - ANZSCO_1220.0_2006_V1.0
      type: string
      default: ANZSCO_1220.0_2013_V1.2
    CommonPersonV1:
      properties:
        firstName:
          description: >-
            For people with single names this field need not be present.  The
            single name should be in the lastName field
          type: string
        lastName:
          description: For people with single names the single name should be in this field
          type: string
        lastUpdateTime:
          description: >-
            The date and time that this record was last updated by the
            customer.  If no update has occurred then this date should reflect
            the initial creation date for the data
          type: string
          format: date-time
        middleNames:
          description: Field is mandatory but array may be empty
          items:
            type: string
          type: array
        occupationCode:
          description: >-
            Value is a valid ANZSCO Standard Occupation classification code. If
            the occupation code held by the data holder is not one of the
            supported ANZSCO versions, then it must not be supplied.
          type: string
        occupationCodeVersion:
          $ref: '#/components/schemas/EnumCommonOccupationCodeVersionV1'
        prefix:
          description: >-
            Also known as title or salutation.  The prefix to the name (e.g. Mr,
            Mrs, Ms, Miss, Sir, etc)
          type: string
        suffix:
          description: Used for a trailing suffix to the name (e.g. Jr)
          type: string
      required:
        - lastName
        - middleNames
      type: object
    ResponseCommonCustomerV1:
      properties:
        data:
          type: object
          properties:
            customerUType:
              description: The type of customer object that is present
              enum:
                - person
                - organisation
              type: string
            organisation:
              $ref: '#/components/schemas/CommonOrganisationV1'
            person:
              $ref: '#/components/schemas/CommonPersonV1'
          required:
            - customerUType
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
      x-conditional:
        - person
        - organisation
    CommonPhysicalAddressWithPurposeV1:
      allOf:
        - $ref: '#/components/schemas/CommonPhysicalAddressV1'
        - properties:
            purpose:
              description: >-
                Enumeration of values indicating the purpose of the physical
                address
              enum:
                - REGISTERED
                - MAIL
                - PHYSICAL
                - WORK
                - OTHER
              type: string
          required:
            - purpose
          type: object
    CommonOrganisationDetailV1:
      allOf:
        - $ref: '#/components/schemas/CommonOrganisationV1'
        - properties:
            physicalAddresses:
              description: >-
                Must contain at least one address. One and only one address may
                have the purpose of REGISTERED. Zero or one, and no more than
                one, record may have the purpose of MAIL. If zero then the
                REGISTERED address is to be used for mail
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressWithPurposeV1'
              type: array
          required:
            - physicalAddresses
          type: object
    EnumCommonEmailAddressPurposeV1:
      description: 'The purpose for the email, as specified by the customer (Enumeration)'
      enum:
        - WORK
        - HOME
        - OTHER
        - UNSPECIFIED
      type: string
    CommonEmailAddressV1:
      properties:
        address:
          description: >-
            A correctly formatted email address, as defined by the addr_spec
            format in [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt)
          type: string
          format: email
        isPreferred:
          description: >-
            May be true for one and only one email record in the collection.
            Denotes the default email address
          type: boolean
        purpose:
          $ref: '#/components/schemas/EnumCommonEmailAddressPurposeV1'
      required:
        - address
        - purpose
      type: object
    EnumCommonPhoneNumberPurposeV1:
      description: The purpose of the number as specified by the customer
      enum:
        - MOBILE
        - HOME
        - WORK
        - OTHER
        - INTERNATIONAL
        - UNSPECIFIED
      type: string
    CommonPhoneNumberV1:
      properties:
        areaCode:
          description: >-
            Required for non Mobile Phones, if field is present and refers to
            Australian code - the leading 0 should be omitted.
          type: string
        countryCode:
          description: 'If absent, assumed to be Australia (+61). The + should be included'
          type: string
        extension:
          description: An extension number (if applicable)
          type: string
        fullNumber:
          description: >-
            Fully formatted phone number with country code, area code, number
            and extension incorporated. Formatted according to section 5.1.4. of
            [RFC 3966](https://www.ietf.org/rfc/rfc3966.txt)
          type: string
          format: PhoneNumberString
        isPreferred:
          description: >-
            May be true for one and only one entry to indicate the preferred
            phone number. Assumed to be 'false' if not present
          type: boolean
        number:
          description: 'The actual phone number, with leading zeros as appropriate'
          type: string
        purpose:
          $ref: '#/components/schemas/EnumCommonPhoneNumberPurposeV1'
      required:
        - fullNumber
        - number
        - purpose
      type: object
      x-conditional:
        - areaCode
    CommonPersonDetailV1:
      allOf:
        - $ref: '#/components/schemas/CommonPersonV1'
        - properties:
            emailAddresses:
              description: May be empty
              items:
                $ref: '#/components/schemas/CommonEmailAddressV1'
              type: array
            phoneNumbers:
              description: Array is mandatory but may be empty if no phone numbers are held
              items:
                $ref: '#/components/schemas/CommonPhoneNumberV1'
              type: array
            physicalAddresses:
              description: >-
                Must contain at least one address. One and only one address may
                have the purpose of REGISTERED. Zero or one, and no more than
                one, record may have the purpose of MAIL. If zero then the
                REGISTERED address is to be used for mail
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressWithPurposeV1'
              type: array
          required:
            - emailAddresses
            - phoneNumbers
            - physicalAddresses
          type: object
    ResponseCommonCustomerDetailV1:
      properties:
        data:
          type: object
          properties:
            customerUType:
              description: The type of customer object that is present
              enum:
                - person
                - organisation
              type: string
            organisation:
              $ref: '#/components/schemas/CommonOrganisationDetailV1'
            person:
              $ref: '#/components/schemas/CommonPersonDetailV1'
          required:
            - customerUType
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
      x-conditional:
        - person
        - organisation
    DiscoveryOutageV1:
      properties:
        duration:
          description: >-
            Planned duration of the outage. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          format: DurationString
        explanation:
          description: >-
            Provides an explanation of the current outage that can be displayed
            to an end customer
          type: string
        isPartial:
          description: >-
            Flag that indicates, if present and set to true, that the outage is
            only partial meaning that only a subset of normally available end
            points will be affected by the outage
          type: boolean
        outageTime:
          description: Date and time that the outage is scheduled to begin
          type: string
          format: date-time
      required:
        - duration
        - explanation
        - outageTime
      type: object
    ResponseDiscoveryOutagesListV1:
      properties:
        data:
          type: object
          properties:
            outages:
              description: >-
                List of scheduled outages. Property is mandatory but may contain
                and empty list if no outages are scheduled
              items:
                $ref: '#/components/schemas/DiscoveryOutageV1'
              type: array
          required:
            - outages
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    EnumCommonDiscoveryStatusV1:
      description: >-
        Enumeration with values. OK (implementation is fully functional).
        PARTIAL_FAILURE (one or more end points are unexpectedly unavailable).
        UNAVAILABLE (the full implementation is unexpectedly unavailable).
        SCHEDULED_OUTAGE (an advertised outage is in effect)
      enum:
        - OK
        - PARTIAL_FAILURE
        - UNAVAILABLE
        - SCHEDULED_OUTAGE
      type: string
    ResponseCommonDiscoveryStatusV1:
      properties:
        data:
          type: object
          properties:
            detectionTime:
              description: >-
                The date and time that the current outage was detected. Should
                only be present if the status property is PARTIAL_FAILURE or
                UNAVAILABLE
              type: string
              format: date-time
            expectedResolutionTime:
              description: >-
                The date and time that full service is expected to resume (if
                known). Should not be present if the status property has a value
                of OK.
              type: string
              format: date-time
            explanation:
              description: >-
                Provides an explanation of the current outage that can be
                displayed to an end customer. Mandatory if the status property
                is any value other than OK
              type: string
            status:
              $ref: '#/components/schemas/EnumCommonDiscoveryStatusV1'
            updateTime:
              description: >-
                The date and time that this status was last updated by the Data
                Holder.
              type: string
              format: date-time
          required:
            - status
            - updateTime
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
      type: object
    AdminAvailabilityMetricsV1:
      description: Percentage availability of the CDR platform over time
      properties:
        currentMonth:
          description: >-
            Percentage availability of the CDR platform so far for the current
            calendar month. 0.0 means 0%. 1.0 means 100%.
          type: number
          minimum: 0
          maximum: 1
        previousMonths:
          description: >-
            Percentage availability of the CDR platform for previous calendar
            months. The first element indicates the last month and so on. A
            maximum of twelve entries is required if available. 0.0 means 0%.
            1.0 means 100%.
          items:
            type: number
            minimum: 0
            maximum: 1
          example:
            - 1
            - 1
            - 1
            - 0.99
            - 1
            - 1
            - 0.989
            - 0.956
            - 1
            - 1
            - 1
            - 0.99
            - 1
            - 1
            - 1
            - 0.99
          type: array
      type: object
    AdminTierMetricV1:
      description: 'Response time in seconds, at millisecond resolution'
      properties:
        currentDay:
          description: Average response time for current day
          type: number
          example: 55
        previousDays:
          description: >-
            Average response time for previous days. The first element indicates
            yesterday and so on. A maximum of seven entries is required if
            available.
          items:
            type: number
          type: array
          example:
            - 55
            - 10.12
            - 40.22
            - 66
            - 22
            - 11
            - 10
      type: object
    AdminAverageResponseMetricsV1:
      description: >-
        Average response time in seconds, at millisecond resolution, within each
        performance tier
      properties:
        highPriority:
          $ref: '#/components/schemas/AdminTierMetricV1'
        largePayload:
          $ref: '#/components/schemas/AdminTierMetricV1'
        lowPriority:
          $ref: '#/components/schemas/AdminTierMetricV1'
        unattended:
          $ref: '#/components/schemas/AdminTierMetricV1'
        unauthenticated:
          $ref: '#/components/schemas/AdminTierMetricV1'
      type: object
    AdminTPSMetricV1:
      description: Transactions per second over time
      properties:
        currentDay:
          description: Average TPS for current day
          type: integer
          example: 234
        previousDays:
          description: >-
            Average TPS for previous days. The first element indicates yesterday
            and so on. A maximum of seven entries is required if available
          items:
            type: integer
          type: array
          example:
            - 123
            - 99
            - 33
            - 44
            - 77
            - 88
            - 103
      type: object
    AdminErrorMetricV1:
      description: Number of calls resulting in error due to server execution over time
      properties:
        currentDay:
          description: Number of errors for current day
          type: integer
          example: 0
        previousDays:
          description: >-
            Number of errors for previous days. The first element indicates
            yesterday and so on. A maximum of seven entries is required if
            available
          items:
            type: integer
          type: array
          example:
            - 1
            - 4
            - 8
            - 0
            - 0
            - 22
            - 0
      type: object
    AdminInvocationMetricV1:
      description: Number of API calls in each performance tier over time
      properties:
        currentDay:
          description: API call counts for current day
          type: integer
          example: 18833
        previousDays:
          description: >-
            API call counts for previous days. The first element indicates
            yesterday and so on. A maximum of seven entries is required if
            available
          items:
            type: integer
          type: array
          example:
            - 15293
            - 12834
            - 28218
            - 18234
            - 18293
            - 26534
            - 15367
      type: object
    AdminInvocationMetricsV1:
      description: >-
        Average response time in seconds, at millisecond resolution, within each
        performance tier
      properties:
        highPriority:
          $ref: '#/components/schemas/AdminInvocationMetricV1'
        largePayload:
          $ref: '#/components/schemas/AdminInvocationMetricV1'
        lowPriority:
          $ref: '#/components/schemas/AdminInvocationMetricV1'
        unattended:
          $ref: '#/components/schemas/AdminInvocationMetricV1'
        unauthenticated:
          $ref: '#/components/schemas/AdminInvocationMetricV1'
      type: object
    AdminPeakTPSMetricsV1:
      description: Maximum record transactions per second over time
      properties:
        currentDay:
          description: Peak TPS for current day
          type: integer
          example: 134
        previousDays:
          description: >-
            Peak TPS for previous days. The first element indicates yesterday
            and so on. A maximum of seven entries is required if available
          items:
            type: integer
          type: array
          example:
            - 88
            - 33
            - 138
            - 254
            - 600
            - 123
            - 288
    AdminPerformanceMetricsV1:
      description: Percentage of calls within the performance thresholds
      properties:
        currentDay:
          description: >-
            Percentage of calls within the performance threshold for the current
            day. 0.0 means 0%. 1.0 means 100%
          type: number
          minimum: 0
          maximum: 1
          example: 1
        previousDays:
          description: >-
            Percentage of calls within the performance threshold for previous
            days. The first element indicates yesterday and so on. A maximum of
            seven entries is required if available. 0.0 means 0%. 1.0 means 100%
          items:
            type: number
            minimum: 0
            maximum: 1
          type: array
          example:
            - 1
            - 1
            - 0.998
            - 0.99
            - 1
            - 1
            - 0.95
      type: object
    AdminRejectionMetricsV1:
      description: Number of calls rejected due to traffic thresholds over time
      properties:
        currentDay:
          description: Number of calls rejected for current day
          type: integer
          example: 235
        previousDays:
          description: >-
            Number of calls rejected for previous days. The first element
            indicates yesterday and so on. A maximum of seven entries is
            required if available.
          items:
            type: integer
          type: array
          example:
            - 288
            - 212
            - 145
            - 183
            - 104
            - 234
            - 291
    AdminSessionCountMetricsV1:
      description: >-
        Session counts over time. Note that a session is defined as the
        provisioning of an Access Token.
      properties:
        currentDay:
          description: Session count for current day
          type: integer
          example: 134
        previousDays:
          description: >-
            Session count for previous days. The first element indicates
            yesterday and so on. A maximum of seven entries is required if
            available
          items:
            type: integer
          type: array
          example:
            - 123
            - 111
            - 110
            - 100
            - 88
            - 55
            - 33
    ResponseAdminMetricsListV1:
      properties:
        data:
          type: object
          properties:
            availability:
              $ref: '#/components/schemas/AdminAvailabilityMetricsV1'
            averageResponse:
              $ref: '#/components/schemas/AdminAverageResponseMetricsV1'
            averageTps:
              $ref: '#/components/schemas/AdminTPSMetricV1'
            customerCount:
              description: >-
                Number of customers with active authorisations at the time of
                the call
              type: integer
            errors:
              $ref: '#/components/schemas/AdminErrorMetricV1'
            invocations:
              $ref: '#/components/schemas/AdminInvocationMetricsV1'
            peakTps:
              $ref: '#/components/schemas/AdminPeakTPSMetricsV1'
            performance:
              $ref: '#/components/schemas/AdminPerformanceMetricsV1'
            recipientCount:
              description: >-
                Number of data recipients with active authorisations at the time
                of the call
              type: integer
            rejections:
              $ref: '#/components/schemas/AdminRejectionMetricsV1'
            requestTime:
              description: >-
                The date and time that the metrics in this payload were
                requested.
              type: string
              format: date-time
            sessionCount:
              $ref: '#/components/schemas/AdminSessionCountMetricsV1'
          required:
            - requestTime
            - availability
            - averageResponse
            - averageTps
            - customerCount
            - errors
            - invocations
            - peakTps
            - performance
            - recipientCount
            - rejections
            - sessionCount
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
        - meta
      type: object
    AdminRejectionMetricV1:
      description: Number of calls rejected due to traffic thresholds over time
      properties:
        currentDay:
          description: Number of calls rejected for current day
          type: integer
          example: 235
        previousDays:
          description: >-
            Number of calls rejected for previous days. The first element
            indicates yesterday and so on. A maximum of seven entries is
            required if available.
          items:
            type: integer
          type: array
          example:
            - 288
            - 212
            - 145
            - 183
            - 104
            - 234
            - 291
    AdminRejectionMetricsV2:
      description: Number of calls rejected due to traffic thresholds over time
      properties:
        authenticated:
          $ref: '#/components/schemas/AdminRejectionMetricV1'
        unauthenticated:
          $ref: '#/components/schemas/AdminRejectionMetricV1'
    ResponseAdminMetricsListV2:
      properties:
        data:
          type: object
          properties:
            availability:
              $ref: '#/components/schemas/AdminAvailabilityMetricsV1'
            averageResponse:
              $ref: '#/components/schemas/AdminAverageResponseMetricsV1'
            averageTps:
              $ref: '#/components/schemas/AdminTPSMetricV1'
            customerCount:
              description: >-
                Number of customers with active authorisations at the time of
                the call
              type: integer
            errors:
              $ref: '#/components/schemas/AdminErrorMetricV1'
            invocations:
              $ref: '#/components/schemas/AdminInvocationMetricsV1'
            peakTps:
              $ref: '#/components/schemas/AdminPeakTPSMetricsV1'
            performance:
              $ref: '#/components/schemas/AdminPerformanceMetricsV1'
            recipientCount:
              description: >-
                Number of data recipients with active authorisations at the time
                of the call
              type: integer
            rejections:
              $ref: '#/components/schemas/AdminRejectionMetricsV2'
            requestTime:
              description: >-
                The date and time that the metrics in this payload were
                requested.
              type: string
              format: date-time
            sessionCount:
              $ref: '#/components/schemas/AdminSessionCountMetricsV1'
          required:
            - requestTime
            - availability
            - averageResponse
            - averageTps
            - customerCount
            - errors
            - invocations
            - peakTps
            - performance
            - recipientCount
            - rejections
            - sessionCount
        links:
          $ref: '#/components/schemas/LinksV1'
        meta:
          $ref: '#/components/schemas/MetaV1'
      required:
        - data
        - links
        - meta
      type: object
  parameters:
    QueryProductCategory:
      name: product-category
      in: query
      description: >-
        Used to filter results on the productCategory field applicable to
        accounts. Any one of the valid values for this field can be supplied. If
        absent then all accounts returned.
      required: false
      schema:
        $ref: '#/components/schemas/EnumBankingProductCategoryV1'
    QueryAccountOpenStatus:
      description: >-
        Used to filter results according to open/closed status. Values can be
        OPEN, CLOSED or ALL. If absent then ALL is assumed
      in: query
      name: open-status
      required: false
      schema:
        default: ALL
        enum:
          - OPEN
          - CLOSED
          - ALL
        type: string
    QueryAccountIsOwned:
      description: >-
        Filters accounts based on whether they are owned by the authorised
        customer.  True for owned accounts, false for unowned accounts and
        absent for all accounts
      in: query
      name: is-owned
      required: false
      schema:
        type: boolean
      x-cds-type: Boolean
    QueryPage:
      description: Page of results to request (standard pagination)
      in: query
      name: page
      required: false
      schema:
        default: 1
        type: integer
      x-cds-type: PositiveInteger
    QueryPageSize:
      description: Page size to request. Default is 25 (standard pagination)
      in: query
      name: page-size
      required: false
      schema:
        default: 25
        type: integer
      x-cds-type: PositiveInteger
    HeaderXV:
      description: >-
        Version of the API end point requested by the client. Must be set to a
        positive integer.
      in: header
      name: x-v
      required: true
      schema:
        type: string
    HeaderXMinV:
      description: >-
        Minimum version of the API end point requested by the client. Must be
        set to a positive integer if provided.
      in: header
      name: x-min-v
      required: false
      schema:
        type: string
    HeaderXFapiInteractionId:
      description: >-
        An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a
        correlation id. If provided, the data holder must play back this value
        in the x-fapi-interaction-id response header. If not provided a
        [RFC4122] UUID value is required to be provided in the response header
        to track the interaction.
      in: header
      name: x-fapi-interaction-id
      required: false
      schema:
        type: string
        format: uuid
    HeaderXFAPIAuthDate:
      description: >-
        The time when the customer last logged in to the data recipient.
        Required for all resource calls (customer present and unattended). Not
        to be included for unauthenticated calls.
      in: header
      name: x-fapi-auth-date
      required: false
      schema:
        type: string
    HeaderXFAPICustomerIPAddress:
      description: >-
        The customer's original IP address if the customer is currently logged
        in to the data recipient. The presence of this header indicates that the
        API is being called in a customer present context. Not to be included
        for unauthenticated calls.
      in: header
      name: x-fapi-customer-ip-address
      required: false
      schema:
        type: string
    HeaderXCDSClientHeaders:
      description: >-
        The customer's original standard http headers
        [Base64](#common-field-types) encoded, including the original User Agent
        header, if the customer is currently logged in to the data recipient.
        Mandatory for customer present calls.  Not required for unattended or
        unauthenticated calls.
      in: header
      name: x-cds-client-headers
      required: false
      schema:
        type: string
      x-cds-type: Base64
    PathAccountId:
      description: >-
        ID of the account to get scheduled payments for. Must have previously
        been returned by one of the account list end points. The account
        specified is the source account for the payment
      in: path
      name: accountId
      required: true
      schema:
        type: string
        x-cds-type: ASCIIString
    QueryTransactionOldestTime:
      description: >-
        Constrain the transaction history request to transactions with effective
        time at or after this date/time. If absent defaults to newest-time minus
        90 days.  Format is aligned to DateTimeString common type
      in: query
      name: oldest-time
      required: false
      schema:
        type: string
        format: date-time
    QueryTransactionNewestTime:
      description: >-
        Constrain the transaction history request to transactions with effective
        time at or before this date/time.  If absent defaults to today.  Format
        is aligned to DateTimeString common type
      in: query
      name: newest-time
      required: false
      schema:
        type: string
        format: date-time
    QueryTransactionMinAmount:
      description: >-
        Filter transactions to only transactions with amounts higher or equal to
        than this amount
      in: query
      name: min-amount
      required: false
      schema:
        type: string
      x-cds-type: AmountString
    QueryTransactionMaxAmount:
      description: >-
        Filter transactions to only transactions with amounts less than or equal
        to than this amount
      in: query
      name: max-amount
      required: false
      schema:
        type: string
      x-cds-type: AmountString
    PathTransactionId:
      description: >-
        ID of the transaction obtained from a previous call to one of the other
        transaction end points
      in: path
      name: transactionId
      required: true
      schema:
        type: string
      x-cds-type: ASCIIString
    QueryPayeeType:
      description: >-
        Filter on the payee type field.  In addition to normal type field
        values, ALL can be specified to retrieve all payees.  If absent the
        assumed value is ALL
      in: query
      name: type
      required: false
      schema:
        default: ALL
        enum:
          - DOMESTIC
          - INTERNATIONAL
          - BILLER
          - ALL
        type: string
    PathPayeeId:
      description: The ID used to locate the details of a particular payee
      in: path
      name: payeeId
      required: true
      schema:
        type: string
      x-cds-type: ASCIIString
    QueryProductEffective:
      description: >-
        Allows for the filtering of products based on whether the current time
        is within the period of time defined as effective by the effectiveFrom
        and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’.
        If absent defaults to 'CURRENT'
      in: query
      name: effective
      required: false
      schema:
        default: CURRENT
        enum:
          - CURRENT
          - FUTURE
          - ALL
        type: string
    QueryUpdatedSince:
      description: >-
        Only include products that have been updated after the specified date
        and time. If absent defaults to include all products
      in: query
      name: updated-since
      required: false
      schema:
        type: string
        format: date-time
    QueryProductBrand:
      description: Filter results based on a specific brand
      in: query
      name: brand
      required: false
      schema:
        type: string
    PathProductId:
      description: ID of the specific product requested
      in: path
      name: productId
      required: true
      schema:
        type: string
      x-cds-type: ASCIIString
    QueryPeriod:
      description: >-
        The period of metrics to be requested. Values can be CURRENT (meaning
        metrics for current day), HISTORIC (meaning metrics for previous days or
        months) or ALL. If absent the default is ALL.
      in: query
      name: period
      required: false
      schema:
        default: ALL
        enum:
          - CURRENT
          - HISTORIC
          - ALL
        type: string
  headers:
    XFAPIInteractionId:
      description: >-
        An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a
        correlation id. If provided, the data holder must play back this value
        in the x-fapi-interaction-id response header. If not provided a
        [RFC4122] UUID value is required to be provided in the response header
        to track the interaction.
      schema:
        type: string
    XV:
      description: >-
        The [version](#response-headers) of the API end point that the data
        holder has responded with.
      schema:
        type: string
  responses:
    ListAccounts:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingAccountListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListBalancesBulk:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingAccountsBalanceListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListBalancesSpecificAccounts:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingAccountsBalanceListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    UnprocessableEntity:
      description: >-
        The request was well formed but was unable to be processed due to
        business logic specific to the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
    ListDirectDebitsBulk:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: >-
                  #/components/schemas/ResponseBankingDirectDebitAuthorisationListV1
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListDirectDebitsSpecificAccounts:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: >-
                  #/components/schemas/ResponseBankingDirectDebitAuthorisationListV1
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetAccountDetail:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingAccountByIdV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetBalance:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingAccountsBalanceByIdV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListDirectDebits:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: >-
                  #/components/schemas/ResponseBankingDirectDebitAuthorisationListV1
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListScheduledPayments:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingScheduledPaymentsListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetTransactions:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingTransactionListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetTransactionDetail:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingTransactionByIdV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListPayees:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingPayeeListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetPayeeDetail:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingPayeeByIdV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    ListProducts:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingProductListV1'
              - $ref: '#/components/schemas/ResponseBankingProductListV2'
              - $ref: '#/components/schemas/ResponseBankingProductListV3'
      headers:
        x-v:
          $ref: '#/components/headers/XV'
    GetProductDetail:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseBankingProductByIdV1'
              - $ref: '#/components/schemas/ResponseBankingProductByIdV2'
              - $ref: '#/components/schemas/ResponseBankingProductByIdV3'
      headers:
        x-v:
          $ref: '#/components/headers/XV'
    GetCustomer:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseCommonCustomerV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetCustomerDetail:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseCommonCustomerDetailV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetOutages:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseDiscoveryOutagesListV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetStatus:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseCommonDiscoveryStatusV1'
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/headers/XFAPIInteractionId'
        x-v:
          $ref: '#/components/headers/XV'
    GetMetrics:
      description: Success
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ResponseAdminMetricsListV1'
              - $ref: '#/components/schemas/ResponseAdminMetricsListV2'
      headers:
        x-v:
          $ref: '#/components/headers/XV'
    MetadataUpdate:
      description: Success
      headers:
        x-v:
          $ref: '#/components/headers/XV'
  requestBodies:
    RequestAccountIds:
      description: List of Account Identifiers
      content:
        application/json:
          schema:
            type: object
            properties:
              accountIds:
                items:
                  description: Array of specific accountIds to obtain authorisations for
                  type: string
                  x-cds-type: ASCIIString
                type: array
            required:
              - accountIds
      required: true
    RequestMetaDataUpdate:
      description: Register triggered action to perform
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                default: REFRESH
                description: >-
                  The action to take for the meta data. At the moment the only
                  option is REFRESH which requires the data holder to call the
                  ACCC to refresh meta data as soon as practicable
                enum:
                  - REFRESH
                type: string
            required:
              - action
      required: true
servers:
  - url: 'https://data.holder.com.au/cds-au/v1'
